/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/index"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Faodhgan%2Fcounterfactual-vaults%2Fsrc%2Fpages%2Findex.tsx&page=%2F!":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Faodhgan%2Fcounterfactual-vaults%2Fsrc%2Fpages%2Findex.tsx&page=%2F! ***!
  \**********************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./src/pages/index.tsx */ \"./src/pages/index.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZVc2VycyUyRmFvZGhnYW4lMkZjb3VudGVyZmFjdHVhbC12YXVsdHMlMkZzcmMlMkZwYWdlcyUyRmluZGV4LnRzeCZwYWdlPSUyRiEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxvREFBdUI7QUFDOUM7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvP2I5MTUiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9cIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHJlcXVpcmUoXCIuL3NyYy9wYWdlcy9pbmRleC50c3hcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL1wiXSlcbiAgICAgIH0pO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Faodhgan%2Fcounterfactual-vaults%2Fsrc%2Fpages%2Findex.tsx&page=%2F!\n"));

/***/ }),

/***/ "./src/components/Account.tsx":
/*!************************************!*\
  !*** ./src/components/Account.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Account\": function() { return /* binding */ Account; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wagmi */ \"./node_modules/wagmi/dist/index.js\");\n\nvar _s = $RefreshSig$();\n\nfunction Account() {\n    _s();\n    const { address  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useAccount)();\n    const { data: ensName  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useEnsName)({\n        address\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            ensName !== null && ensName !== void 0 ? ensName : address,\n            ensName ? \" (\".concat(address, \")\") : null\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Account.tsx\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, this);\n}\n_s(Account, \"CO65l89PQg5MGxBzpetTsIuLseM=\", false, function() {\n    return [\n        wagmi__WEBPACK_IMPORTED_MODULE_1__.useAccount,\n        wagmi__WEBPACK_IMPORTED_MODULE_1__.useEnsName\n    ];\n});\n_c = Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9BY2NvdW50LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBOEM7QUFFdkMsU0FBU0UsVUFBVTs7SUFDeEIsTUFBTSxFQUFFQyxRQUFPLEVBQUUsR0FBR0gsaURBQVVBO0lBQzlCLE1BQU0sRUFBRUksTUFBTUMsUUFBTyxFQUFFLEdBQUdKLGlEQUFVQSxDQUFDO1FBQUVFO0lBQVE7SUFFL0MscUJBQ0UsOERBQUNHOztZQUNFRCxvQkFBQUEscUJBQUFBLFVBQVdGLE9BQU87WUFDbEJFLFVBQVUsS0FBYSxPQUFSRixTQUFRLE9BQUssSUFBSTs7Ozs7OztBQUd2QyxDQUFDO0dBVmVEOztRQUNNRiw2Q0FBVUE7UUFDSkMsNkNBQVVBOzs7S0FGdEJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0FjY291bnQudHN4Pzc4YjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQWNjb3VudCwgdXNlRW5zTmFtZSB9IGZyb20gJ3dhZ21pJ1xuXG5leHBvcnQgZnVuY3Rpb24gQWNjb3VudCgpIHtcbiAgY29uc3QgeyBhZGRyZXNzIH0gPSB1c2VBY2NvdW50KClcbiAgY29uc3QgeyBkYXRhOiBlbnNOYW1lIH0gPSB1c2VFbnNOYW1lKHsgYWRkcmVzcyB9KVxuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIHtlbnNOYW1lID8/IGFkZHJlc3N9XG4gICAgICB7ZW5zTmFtZSA/IGAgKCR7YWRkcmVzc30pYCA6IG51bGx9XG4gICAgPC9kaXY+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJ1c2VBY2NvdW50IiwidXNlRW5zTmFtZSIsIkFjY291bnQiLCJhZGRyZXNzIiwiZGF0YSIsImVuc05hbWUiLCJkaXYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Account.tsx\n"));

/***/ }),

/***/ "./src/components/Connect.tsx":
/*!************************************!*\
  !*** ./src/components/Connect.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Connect\": function() { return /* binding */ Connect; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wagmi */ \"./node_modules/wagmi/dist/index.js\");\n\nvar _s = $RefreshSig$();\n\nfunction Connect() {\n    _s();\n    const { connector , isConnected  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useAccount)();\n    const { connect , connectors , error , isLoading , pendingConnector  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useConnect)();\n    const { disconnect  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useDisconnect)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    isConnected && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>disconnect(),\n                        children: [\n                            \"Disconnect from \",\n                            connector === null || connector === void 0 ? void 0 : connector.name\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Connect.tsx\",\n                        lineNumber: 13,\n                        columnNumber: 11\n                    }, this),\n                    connectors.filter((x)=>{\n                        return x.ready && x.id !== (connector === null || connector === void 0 ? void 0 : connector.id);\n                    }).map((x)=>{\n                        /*#__PURE__*/ return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>connect({\n                                    connector: x\n                                }),\n                            children: [\n                                x.name,\n                                isLoading && x.id === (pendingConnector === null || pendingConnector === void 0 ? void 0 : pendingConnector.id) && \" (connecting)\"\n                            ]\n                        }, x.id, true, {\n                            fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Connect.tsx\",\n                            lineNumber: 21,\n                            columnNumber: 13\n                        }, this);\n                    })\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Connect.tsx\",\n                lineNumber: 11,\n                columnNumber: 7\n            }, this),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: error.message\n            }, void 0, false, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Connect.tsx\",\n                lineNumber: 28,\n                columnNumber: 17\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Connect.tsx\",\n        lineNumber: 10,\n        columnNumber: 5\n    }, this);\n}\n_s(Connect, \"kowc4XyTukWyUwzg+BvLBjvpJQk=\", false, function() {\n    return [\n        wagmi__WEBPACK_IMPORTED_MODULE_1__.useAccount,\n        wagmi__WEBPACK_IMPORTED_MODULE_1__.useConnect,\n        wagmi__WEBPACK_IMPORTED_MODULE_1__.useDisconnect\n    ];\n});\n_c = Connect;\nvar _c;\n$RefreshReg$(_c, \"Connect\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Db25uZWN0LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNkQ7QUFFdEQsU0FBU0csVUFBVTs7SUFDeEIsTUFBTSxFQUFFQyxVQUFTLEVBQUVDLFlBQVcsRUFBRSxHQUFHTCxpREFBVUE7SUFDN0MsTUFBTSxFQUFFTSxRQUFPLEVBQUVDLFdBQVUsRUFBRUMsTUFBSyxFQUFFQyxVQUFTLEVBQUVDLGlCQUFnQixFQUFFLEdBQy9EVCxpREFBVUE7SUFDWixNQUFNLEVBQUVVLFdBQVUsRUFBRSxHQUFHVCxvREFBYUE7SUFFcEMscUJBQ0UsOERBQUNVOzswQkFDQyw4REFBQ0E7O29CQUNFUCw2QkFDQyw4REFBQ1E7d0JBQU9DLFNBQVMsSUFBTUg7OzRCQUFjOzRCQUNsQlAsc0JBQUFBLHVCQUFBQSxLQUFBQSxJQUFBQSxVQUFXVyxJQUFJOzs7Ozs7O29CQUluQ1IsV0FDRVMsTUFBTSxDQUFDLENBQUNDO3dCQUFNQSxPQUFBQSxFQUFFQyxLQUFLLElBQUlELEVBQUVFLEVBQUUsS0FBS2YsQ0FBQUEsc0JBQUFBLHVCQUFBQSxLQUFBQSxJQUFBQSxVQUFXZSxFQUFFO3VCQUMvQ0MsR0FBRyxDQUFDLENBQUNIO3NDQUNKLHFFQUFDSjs0QkFBa0JDLFNBQVMsSUFBTVIsUUFBUTtvQ0FBRUYsV0FBV2E7Z0NBQUU7O2dDQUN0REEsRUFBRUYsSUFBSTtnQ0FDTk4sYUFBYVEsRUFBRUUsRUFBRSxLQUFLVCxDQUFBQSw2QkFBQUEsOEJBQUFBLEtBQUFBLElBQUFBLGlCQUFrQlMsRUFBRSxLQUFJOzsyQkFGcENGLEVBQUVFLEVBQUU7Ozs7Ozs7Ozs7OztZQU90QlgsdUJBQVMsOERBQUNJOzBCQUFLSixNQUFNYSxPQUFPOzs7Ozs7Ozs7Ozs7QUFHbkMsQ0FBQztHQTVCZWxCOztRQUNxQkgsNkNBQVVBO1FBRTNDQyw2Q0FBVUE7UUFDV0MsZ0RBQWFBOzs7S0FKdEJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0Nvbm5lY3QudHN4PzVmYjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQWNjb3VudCwgdXNlQ29ubmVjdCwgdXNlRGlzY29ubmVjdCB9IGZyb20gJ3dhZ21pJ1xuXG5leHBvcnQgZnVuY3Rpb24gQ29ubmVjdCgpIHtcbiAgY29uc3QgeyBjb25uZWN0b3IsIGlzQ29ubmVjdGVkIH0gPSB1c2VBY2NvdW50KClcbiAgY29uc3QgeyBjb25uZWN0LCBjb25uZWN0b3JzLCBlcnJvciwgaXNMb2FkaW5nLCBwZW5kaW5nQ29ubmVjdG9yIH0gPVxuICAgIHVzZUNvbm5lY3QoKVxuICBjb25zdCB7IGRpc2Nvbm5lY3QgfSA9IHVzZURpc2Nvbm5lY3QoKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIHtpc0Nvbm5lY3RlZCAmJiAoXG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBkaXNjb25uZWN0KCl9PlxuICAgICAgICAgICAgRGlzY29ubmVjdCBmcm9tIHtjb25uZWN0b3I/Lm5hbWV9XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICl9XG5cbiAgICAgICAge2Nvbm5lY3RvcnNcbiAgICAgICAgICAuZmlsdGVyKCh4KSA9PiB4LnJlYWR5ICYmIHguaWQgIT09IGNvbm5lY3Rvcj8uaWQpXG4gICAgICAgICAgLm1hcCgoeCkgPT4gKFxuICAgICAgICAgICAgPGJ1dHRvbiBrZXk9e3guaWR9IG9uQ2xpY2s9eygpID0+IGNvbm5lY3QoeyBjb25uZWN0b3I6IHggfSl9PlxuICAgICAgICAgICAgICB7eC5uYW1lfVxuICAgICAgICAgICAgICB7aXNMb2FkaW5nICYmIHguaWQgPT09IHBlbmRpbmdDb25uZWN0b3I/LmlkICYmICcgKGNvbm5lY3RpbmcpJ31cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICkpfVxuICAgICAgPC9kaXY+XG5cbiAgICAgIHtlcnJvciAmJiA8ZGl2PntlcnJvci5tZXNzYWdlfTwvZGl2Pn1cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl0sIm5hbWVzIjpbInVzZUFjY291bnQiLCJ1c2VDb25uZWN0IiwidXNlRGlzY29ubmVjdCIsIkNvbm5lY3QiLCJjb25uZWN0b3IiLCJpc0Nvbm5lY3RlZCIsImNvbm5lY3QiLCJjb25uZWN0b3JzIiwiZXJyb3IiLCJpc0xvYWRpbmciLCJwZW5kaW5nQ29ubmVjdG9yIiwiZGlzY29ubmVjdCIsImRpdiIsImJ1dHRvbiIsIm9uQ2xpY2siLCJuYW1lIiwiZmlsdGVyIiwieCIsInJlYWR5IiwiaWQiLCJtYXAiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Connect.tsx\n"));

/***/ }),

/***/ "./src/components/Counter.tsx":
/*!************************************!*\
  !*** ./src/components/Counter.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Counter\": function() { return /* binding */ Counter; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! wagmi */ \"./node_modules/wagmi/dist/index.js\");\n/* harmony import */ var _generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../generated */ \"./src/generated.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\n\n\n\nfunction Counter() {\n    _s();\n    const [createdVaultControllerAddress, setCreatedVaultControllerAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CreateVaultController, {\n                onVaultCreated: setCreatedVaultControllerAddress\n            }, void 0, false, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n                lineNumber: 17,\n                columnNumber: 7\n            }, this),\n            createdVaultControllerAddress && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GetAddresses, {\n                createdVaultControllerAddress: createdVaultControllerAddress\n            }, void 0, false, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n                lineNumber: 18,\n                columnNumber: 41\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n        lineNumber: 16,\n        columnNumber: 5\n    }, this);\n}\n_s(Counter, \"e3Gu39D7e4c7XalWbqlXn8bL9HU=\");\n_c = Counter;\nconst factoryAddress = \"0xF32659FA35e8B3c7daFb061702043a24b75793dE\";\nfunction GetAddresses(param) {\n    let { createdVaultControllerAddress  } = param;\n    _s1();\n    // create an array of bignumbers from 1 to 10\n    const args = Array.from(Array(100).keys()).map((i)=>ethers__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(i + 1));\n    // call caclulateAddresses on createdVaultControllerAddress\n    const contractReadResult = (0,wagmi__WEBPACK_IMPORTED_MODULE_4__.useContractRead)({\n        address: createdVaultControllerAddress,\n        abi: _generated__WEBPACK_IMPORTED_MODULE_2__.counterfactualVaultControllerABI,\n        functionName: \"computeAddress\",\n        args: [\n            args\n        ]\n    });\n    console.log({\n        contractReadResult\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    \"You have a vault at: \",\n                    createdVaultControllerAddress\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n                lineNumber: 41,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"scrollable-container\",\n                children: (contractReadResult === null || contractReadResult === void 0 ? void 0 : contractReadResult.data) && contractReadResult.data.map((address, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: address.toString()\n                    }, index, false, {\n                        fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n                        lineNumber: 45,\n                        columnNumber: 13\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n                lineNumber: 42,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n        lineNumber: 40,\n        columnNumber: 5\n    }, this);\n}\n_s1(GetAddresses, \"9IK2OmcKj2UsmpcH4rzWA8jFCe4=\", false, function() {\n    return [\n        wagmi__WEBPACK_IMPORTED_MODULE_4__.useContractRead\n    ];\n});\n_c1 = GetAddresses;\nfunction CreateVaultController(param) {\n    let { onVaultCreated  } = param;\n    _s2();\n    const { data: count  } = (0,_generated__WEBPACK_IMPORTED_MODULE_2__.useOwnableOwner)();\n    const { config  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_4__.usePrepareContractWrite)({\n        address: factoryAddress,\n        abi: _generated__WEBPACK_IMPORTED_MODULE_2__.counterfactualVaultControllerFactoryABI,\n        functionName: \"createCounterfactualVaultController\"\n    });\n    const { data , isSuccess , write  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_4__.useContractWrite)(config);\n    const { isLoading  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_4__.useWaitForTransaction)({\n        hash: data === null || data === void 0 ? void 0 : data.hash,\n        onSuccess: ()=>console.log(\"sent transaction!!\")\n    });\n    (0,wagmi__WEBPACK_IMPORTED_MODULE_4__.useContractEvent)({\n        address: factoryAddress,\n        abi: _generated__WEBPACK_IMPORTED_MODULE_2__.counterfactualVaultControllerFactoryABI,\n        eventName: \"CounterfactualVaultControllerCreated\",\n        listener (creator, vault) {\n            console.log(\"the event happened!\");\n            console.log({\n                vault\n            });\n            console.log({\n                creator\n            });\n            onVaultCreated(vault);\n        }\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                disabled: !write,\n                onClick: ()=>{\n                    return write === null || write === void 0 ? void 0 : write();\n                },\n                children: \"Create Counterfactual Vault\"\n            }, void 0, false, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n                lineNumber: 86,\n                columnNumber: 7\n            }, this),\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"Check Wallet\"\n            }, void 0, false, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n                lineNumber: 89,\n                columnNumber: 21\n            }, this),\n            isSuccess && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    \"Transaction: \",\n                    JSON.stringify(data)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n                lineNumber: 90,\n                columnNumber: 21\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/Counter.tsx\",\n        lineNumber: 85,\n        columnNumber: 5\n    }, this);\n}\n_s2(CreateVaultController, \"/TEdUB/+gzgBe+0HygpJ8z7s0Gg=\", false, function() {\n    return [\n        _generated__WEBPACK_IMPORTED_MODULE_2__.useOwnableOwner,\n        wagmi__WEBPACK_IMPORTED_MODULE_4__.usePrepareContractWrite,\n        wagmi__WEBPACK_IMPORTED_MODULE_4__.useContractWrite,\n        wagmi__WEBPACK_IMPORTED_MODULE_4__.useWaitForTransaction,\n        wagmi__WEBPACK_IMPORTED_MODULE_4__.useContractEvent\n    ];\n});\n_c2 = CreateVaultController;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c1, \"GetAddresses\");\n$RefreshReg$(_c2, \"CreateVaultController\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9Db3VudGVyLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ2tDO0FBQ0Y7QUFDdUc7QUFNbEg7QUFFZCxTQUFTVSxVQUFVOztJQUN4QixNQUFNLENBQUNDLCtCQUErQkMsaUNBQWlDLEdBQUdYLCtDQUFRQSxDQUFDO0lBRW5GLHFCQUNFLDhEQUFDWTs7MEJBQ0MsOERBQUNDO2dCQUFzQkMsZ0JBQWdCSDs7Ozs7O1lBQ3RDRCwrQ0FBaUMsOERBQUNLO2dCQUFhTCwrQkFBK0JBOzs7Ozs7Ozs7Ozs7QUFHckYsQ0FBQztHQVRlRDtLQUFBQTtBQVdoQixNQUFNTyxpQkFBaUI7QUFFdkIsU0FBU0QsYUFBYSxLQUFzQyxFQUFFO1FBQXhDLEVBQUVMLDhCQUE2QixFQUFPLEdBQXRDOztJQUdwQiw2Q0FBNkM7SUFDN0MsTUFBTU8sT0FBT0MsTUFBTUMsSUFBSSxDQUFDRCxNQUFNLEtBQUtFLElBQUksSUFBSUMsR0FBRyxDQUFDLENBQUNDLElBQU12QixrREFBYyxDQUFDdUIsSUFBSTtJQUV6RSwyREFBMkQ7SUFDM0QsTUFBTUMscUJBQXFCckIsc0RBQWVBLENBQUM7UUFDekNzQixTQUFTZDtRQUNUZSxLQUFLbkIsd0VBQWdDQTtRQUNyQ29CLGNBQWM7UUFDZFQsTUFBTTtZQUFDQTtTQUFLO0lBQ2Q7SUFDQVUsUUFBUUMsR0FBRyxDQUFDO1FBQUVMO0lBQW1CO0lBQ2pDLHFCQUNFLDhEQUFDWDs7MEJBQ0MsOERBQUNBOztvQkFBSTtvQkFBc0JGOzs7Ozs7OzBCQUMzQiw4REFBQ0U7Z0JBQUlpQixXQUFVOzBCQUNaTixDQUFBQSwrQkFBQUEsZ0NBQUFBLEtBQUFBLElBQUFBLG1CQUFvQk8sSUFBSSxLQUN2QlAsbUJBQW1CTyxJQUFJLENBQUNULEdBQUcsQ0FBQyxDQUFDRyxTQUFTTyxzQkFDcEMsOERBQUNuQjtrQ0FBaUJZLFFBQVFRLFFBQVE7dUJBQXhCRDs7Ozs7Ozs7Ozs7Ozs7OztBQU10QjtJQTFCU2hCOztRQU9vQmIsa0RBQWVBOzs7TUFQbkNhO0FBNkJULFNBQVNGLHNCQUFzQixLQUF1QixFQUFFO1FBQXpCLEVBQUVDLGVBQWMsRUFBTyxHQUF2Qjs7SUFDN0IsTUFBTSxFQUFFZ0IsTUFBTUcsTUFBSyxFQUFFLEdBQUd6QiwyREFBZUE7SUFFdkMsTUFBTSxFQUFFMEIsT0FBTSxFQUFFLEdBQUc5Qiw4REFBdUJBLENBQUM7UUFDekNvQixTQUFTUjtRQUNUUyxLQUFLbEIsK0VBQXVDQTtRQUM1Q21CLGNBQWM7SUFDaEI7SUFDQSxNQUFNLEVBQUVJLEtBQUksRUFBRUssVUFBUyxFQUFFQyxNQUFLLEVBQUUsR0FBR2pDLHVEQUFnQkEsQ0FBQytCO0lBRXBELE1BQU0sRUFBRUcsVUFBUyxFQUFFLEdBQUdoQyw0REFBcUJBLENBQUM7UUFDMUNpQyxNQUFNUixpQkFBQUEsa0JBQUFBLEtBQUFBLElBQUFBLEtBQU1RLElBQUk7UUFDaEJDLFdBQVcsSUFBTVosUUFBUUMsR0FBRyxDQUFDO0lBQy9CO0lBSUEzQix1REFBZ0JBLENBQUM7UUFDZnVCLFNBQVNSO1FBQ1RTLEtBQUtsQiwrRUFBdUNBO1FBQzVDaUMsV0FBVztRQUNYQyxVQUFTQyxPQUFPLEVBQUVDLEtBQUssRUFBRTtZQUN2QmhCLFFBQVFDLEdBQUcsQ0FBQztZQUNaRCxRQUFRQyxHQUFHLENBQUM7Z0JBQUVlO1lBQU07WUFDcEJoQixRQUFRQyxHQUFHLENBQUM7Z0JBQUVjO1lBQVE7WUFFdEI1QixlQUFlNkI7UUFDakI7SUFDRjtJQUVBLHFCQUNFLDhEQUFDL0I7OzBCQUNDLDhEQUFDZ0M7Z0JBQU9DLFVBQVUsQ0FBQ1Q7Z0JBQU9VLFNBQVM7b0JBQU1WLE9BQUFBLGtCQUFBQSxtQkFBQUEsS0FBQUEsSUFBQUE7OzBCQUFXOzs7Ozs7WUFHbkRDLDJCQUFhLDhEQUFDekI7MEJBQUk7Ozs7OztZQUNsQnVCLDJCQUFhLDhEQUFDdkI7O29CQUFJO29CQUFjbUMsS0FBS0MsU0FBUyxDQUFDbEI7Ozs7Ozs7Ozs7Ozs7QUFJdEQ7SUF4Q1NqQjs7UUFDaUJMLHVEQUFlQTtRQUVwQkosMERBQXVCQTtRQUtQRCxtREFBZ0JBO1FBRTdCRSx3REFBcUJBO1FBTzNDSixtREFBZ0JBOzs7TUFqQlRZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0NvdW50ZXIudHN4P2Y4YWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2FpdEZvclRyYW5zYWN0aW9uIH0gZnJvbSAnQHdhZ21pL2NvcmUnXG5pbXBvcnQgeyBCaWdOdW1iZXIgfSBmcm9tICdldGhlcnMnXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlQ29udHJhY3RFdmVudCwgdXNlQ29udHJhY3RSZWFkLCB1c2VDb250cmFjdFdyaXRlLCB1c2VOZXR3b3JrLCB1c2VQcmVwYXJlQ29udHJhY3RXcml0ZSwgdXNlV2FpdEZvclRyYW5zYWN0aW9uIH0gZnJvbSAnd2FnbWknXG5cbmltcG9ydCB7XG4gIGNvdW50ZXJmYWN0dWFsVmF1bHRDb250cm9sbGVyQUJJLFxuICBjb3VudGVyZmFjdHVhbFZhdWx0Q29udHJvbGxlckZhY3RvcnlBQkksXG4gIHVzZU93bmFibGVPd25lcixcbn0gZnJvbSAnLi4vZ2VuZXJhdGVkJ1xuXG5leHBvcnQgZnVuY3Rpb24gQ291bnRlcigpIHtcbiAgY29uc3QgW2NyZWF0ZWRWYXVsdENvbnRyb2xsZXJBZGRyZXNzLCBzZXRDcmVhdGVkVmF1bHRDb250cm9sbGVyQWRkcmVzc10gPSB1c2VTdGF0ZSgnJyk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPENyZWF0ZVZhdWx0Q29udHJvbGxlciBvblZhdWx0Q3JlYXRlZD17c2V0Q3JlYXRlZFZhdWx0Q29udHJvbGxlckFkZHJlc3N9IC8+XG4gICAgICB7Y3JlYXRlZFZhdWx0Q29udHJvbGxlckFkZHJlc3MgJiYgPEdldEFkZHJlc3NlcyBjcmVhdGVkVmF1bHRDb250cm9sbGVyQWRkcmVzcz17Y3JlYXRlZFZhdWx0Q29udHJvbGxlckFkZHJlc3N9IC8+fVxuICAgIDwvZGl2PlxuICApXG59XG5cbmNvbnN0IGZhY3RvcnlBZGRyZXNzID0gXCIweEYzMjY1OUZBMzVlOEIzYzdkYUZiMDYxNzAyMDQzYTI0Yjc1NzkzZEVcIlxuXG5mdW5jdGlvbiBHZXRBZGRyZXNzZXMoeyBjcmVhdGVkVmF1bHRDb250cm9sbGVyQWRkcmVzcyB9OiBhbnkpIHtcblxuXG4gIC8vIGNyZWF0ZSBhbiBhcnJheSBvZiBiaWdudW1iZXJzIGZyb20gMSB0byAxMFxuICBjb25zdCBhcmdzID0gQXJyYXkuZnJvbShBcnJheSgxMDApLmtleXMoKSkubWFwKChpKSA9PiBCaWdOdW1iZXIuZnJvbShpICsgMSkpXG5cbiAgLy8gY2FsbCBjYWNsdWxhdGVBZGRyZXNzZXMgb24gY3JlYXRlZFZhdWx0Q29udHJvbGxlckFkZHJlc3NcbiAgY29uc3QgY29udHJhY3RSZWFkUmVzdWx0ID0gdXNlQ29udHJhY3RSZWFkKHtcbiAgICBhZGRyZXNzOiBjcmVhdGVkVmF1bHRDb250cm9sbGVyQWRkcmVzcyxcbiAgICBhYmk6IGNvdW50ZXJmYWN0dWFsVmF1bHRDb250cm9sbGVyQUJJLFxuICAgIGZ1bmN0aW9uTmFtZTogJ2NvbXB1dGVBZGRyZXNzJyxcbiAgICBhcmdzOiBbYXJnc10sXG4gIH0pXG4gIGNvbnNvbGUubG9nKHsgY29udHJhY3RSZWFkUmVzdWx0IH0pXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxkaXY+WW91IGhhdmUgYSB2YXVsdCBhdDoge2NyZWF0ZWRWYXVsdENvbnRyb2xsZXJBZGRyZXNzfTwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJzY3JvbGxhYmxlLWNvbnRhaW5lclwiPlxuICAgICAgICB7Y29udHJhY3RSZWFkUmVzdWx0Py5kYXRhICYmXG4gICAgICAgICAgY29udHJhY3RSZWFkUmVzdWx0LmRhdGEubWFwKChhZGRyZXNzLCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgPGRpdiBrZXk9e2luZGV4fT57YWRkcmVzcy50b1N0cmluZygpfTwvZGl2PlxuICAgICAgICAgICkpfVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG5cbn1cblxuXG5mdW5jdGlvbiBDcmVhdGVWYXVsdENvbnRyb2xsZXIoeyBvblZhdWx0Q3JlYXRlZCB9OiBhbnkpIHtcbiAgY29uc3QgeyBkYXRhOiBjb3VudCB9ID0gdXNlT3duYWJsZU93bmVyKClcblxuICBjb25zdCB7IGNvbmZpZyB9ID0gdXNlUHJlcGFyZUNvbnRyYWN0V3JpdGUoe1xuICAgIGFkZHJlc3M6IGZhY3RvcnlBZGRyZXNzLFxuICAgIGFiaTogY291bnRlcmZhY3R1YWxWYXVsdENvbnRyb2xsZXJGYWN0b3J5QUJJLFxuICAgIGZ1bmN0aW9uTmFtZTogJ2NyZWF0ZUNvdW50ZXJmYWN0dWFsVmF1bHRDb250cm9sbGVyJyxcbiAgfSlcbiAgY29uc3QgeyBkYXRhLCBpc1N1Y2Nlc3MsIHdyaXRlIH0gPSB1c2VDb250cmFjdFdyaXRlKGNvbmZpZylcblxuICBjb25zdCB7IGlzTG9hZGluZyB9ID0gdXNlV2FpdEZvclRyYW5zYWN0aW9uKHtcbiAgICBoYXNoOiBkYXRhPy5oYXNoLFxuICAgIG9uU3VjY2VzczogKCkgPT4gY29uc29sZS5sb2coXCJzZW50IHRyYW5zYWN0aW9uISFcIiksXG4gIH0pXG5cblxuXG4gIHVzZUNvbnRyYWN0RXZlbnQoe1xuICAgIGFkZHJlc3M6IGZhY3RvcnlBZGRyZXNzLFxuICAgIGFiaTogY291bnRlcmZhY3R1YWxWYXVsdENvbnRyb2xsZXJGYWN0b3J5QUJJLFxuICAgIGV2ZW50TmFtZTogJ0NvdW50ZXJmYWN0dWFsVmF1bHRDb250cm9sbGVyQ3JlYXRlZCcsXG4gICAgbGlzdGVuZXIoY3JlYXRvciwgdmF1bHQpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwidGhlIGV2ZW50IGhhcHBlbmVkIVwiKVxuICAgICAgY29uc29sZS5sb2coeyB2YXVsdCB9KVxuICAgICAgY29uc29sZS5sb2coeyBjcmVhdG9yIH0pXG5cbiAgICAgIG9uVmF1bHRDcmVhdGVkKHZhdWx0KTtcbiAgICB9LFxuICB9KVxuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxidXR0b24gZGlzYWJsZWQ9eyF3cml0ZX0gb25DbGljaz17KCkgPT4gd3JpdGU/LigpfT5cbiAgICAgICAgQ3JlYXRlIENvdW50ZXJmYWN0dWFsIFZhdWx0XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIHtpc0xvYWRpbmcgJiYgPGRpdj5DaGVjayBXYWxsZXQ8L2Rpdj59XG4gICAgICB7aXNTdWNjZXNzICYmIDxkaXY+VHJhbnNhY3Rpb246IHtKU09OLnN0cmluZ2lmeShkYXRhKX08L2Rpdj59XG5cbiAgICA8L2Rpdj5cbiAgKVxufSJdLCJuYW1lcyI6WyJCaWdOdW1iZXIiLCJ1c2VTdGF0ZSIsInVzZUNvbnRyYWN0RXZlbnQiLCJ1c2VDb250cmFjdFJlYWQiLCJ1c2VDb250cmFjdFdyaXRlIiwidXNlUHJlcGFyZUNvbnRyYWN0V3JpdGUiLCJ1c2VXYWl0Rm9yVHJhbnNhY3Rpb24iLCJjb3VudGVyZmFjdHVhbFZhdWx0Q29udHJvbGxlckFCSSIsImNvdW50ZXJmYWN0dWFsVmF1bHRDb250cm9sbGVyRmFjdG9yeUFCSSIsInVzZU93bmFibGVPd25lciIsIkNvdW50ZXIiLCJjcmVhdGVkVmF1bHRDb250cm9sbGVyQWRkcmVzcyIsInNldENyZWF0ZWRWYXVsdENvbnRyb2xsZXJBZGRyZXNzIiwiZGl2IiwiQ3JlYXRlVmF1bHRDb250cm9sbGVyIiwib25WYXVsdENyZWF0ZWQiLCJHZXRBZGRyZXNzZXMiLCJmYWN0b3J5QWRkcmVzcyIsImFyZ3MiLCJBcnJheSIsImZyb20iLCJrZXlzIiwibWFwIiwiaSIsImNvbnRyYWN0UmVhZFJlc3VsdCIsImFkZHJlc3MiLCJhYmkiLCJmdW5jdGlvbk5hbWUiLCJjb25zb2xlIiwibG9nIiwiY2xhc3NOYW1lIiwiZGF0YSIsImluZGV4IiwidG9TdHJpbmciLCJjb3VudCIsImNvbmZpZyIsImlzU3VjY2VzcyIsIndyaXRlIiwiaXNMb2FkaW5nIiwiaGFzaCIsIm9uU3VjY2VzcyIsImV2ZW50TmFtZSIsImxpc3RlbmVyIiwiY3JlYXRvciIsInZhdWx0IiwiYnV0dG9uIiwiZGlzYWJsZWQiLCJvbkNsaWNrIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Counter.tsx\n"));

/***/ }),

/***/ "./src/components/NetworkSwitcher.tsx":
/*!********************************************!*\
  !*** ./src/components/NetworkSwitcher.tsx ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NetworkSwitcher\": function() { return /* binding */ NetworkSwitcher; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wagmi */ \"./node_modules/wagmi/dist/index.js\");\n\nvar _s = $RefreshSig$();\n\nfunction NetworkSwitcher() {\n    _s();\n    const { chain  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useNetwork)();\n    const { chains , error , isLoading , pendingChainId , switchNetwork  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useSwitchNetwork)();\n    var _chain_name;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    \"Connected to \",\n                    (_chain_name = chain === null || chain === void 0 ? void 0 : chain.name) !== null && _chain_name !== void 0 ? _chain_name : chain === null || chain === void 0 ? void 0 : chain.id,\n                    (chain === null || chain === void 0 ? void 0 : chain.unsupported) && \" (unsupported)\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/NetworkSwitcher.tsx\",\n                lineNumber: 10,\n                columnNumber: 7\n            }, this),\n            switchNetwork && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: chains.map((x)=>{\n                    return x.id === (chain === null || chain === void 0 ? void 0 : chain.id) ? null : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>switchNetwork(x.id),\n                        children: [\n                            x.name,\n                            isLoading && x.id === pendingChainId && \" (switching)\"\n                        ]\n                    }, x.id, true, {\n                        fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/NetworkSwitcher.tsx\",\n                        lineNumber: 19,\n                        columnNumber: 15\n                    }, this);\n                })\n            }, void 0, false, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/NetworkSwitcher.tsx\",\n                lineNumber: 16,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: error && error.message\n            }, void 0, false, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/NetworkSwitcher.tsx\",\n                lineNumber: 28,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aodhgan/counterfactual-vaults/src/components/NetworkSwitcher.tsx\",\n        lineNumber: 9,\n        columnNumber: 5\n    }, this);\n}\n_s(NetworkSwitcher, \"b7EOgSMpqwf6MvvHl/SmKaxxGMc=\", false, function() {\n    return [\n        wagmi__WEBPACK_IMPORTED_MODULE_1__.useNetwork,\n        wagmi__WEBPACK_IMPORTED_MODULE_1__.useSwitchNetwork\n    ];\n});\n_c = NetworkSwitcher;\nvar _c;\n$RefreshReg$(_c, \"NetworkSwitcher\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9OZXR3b3JrU3dpdGNoZXIudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvRDtBQUU3QyxTQUFTRSxrQkFBa0I7O0lBQ2hDLE1BQU0sRUFBRUMsTUFBSyxFQUFFLEdBQUdILGlEQUFVQTtJQUM1QixNQUFNLEVBQUVJLE9BQU0sRUFBRUMsTUFBSyxFQUFFQyxVQUFTLEVBQUVDLGVBQWMsRUFBRUMsY0FBYSxFQUFFLEdBQy9EUCx1REFBZ0JBO1FBS0VFO0lBSHBCLHFCQUNFLDhEQUFDTTs7MEJBQ0MsOERBQUNBOztvQkFBSTtvQkFDV04sQ0FBQUEsY0FBQUEsa0JBQUFBLG1CQUFBQSxLQUFBQSxJQUFBQSxNQUFPTyxJQUFJLGNBQVhQLHlCQUFBQSxjQUFlQSxrQkFBQUEsbUJBQUFBLEtBQUFBLElBQUFBLE1BQU9RLEVBQUU7b0JBQ3JDUixDQUFBQSxrQkFBQUEsbUJBQUFBLEtBQUFBLElBQUFBLE1BQU9TLFdBQVcsS0FBSTs7Ozs7OztZQUd4QkosK0JBQ0MsOERBQUNDOzBCQUNFTCxPQUFPUyxHQUFHLENBQUMsQ0FBQ0M7b0JBQ1hBLE9BQUFBLEVBQUVILEVBQUUsS0FBS1IsQ0FBQUEsa0JBQUFBLG1CQUFBQSxLQUFBQSxJQUFBQSxNQUFPUSxFQUFFLElBQUcsSUFBSSxpQkFDdkIsOERBQUNJO3dCQUFrQkMsU0FBUyxJQUFNUixjQUFjTSxFQUFFSCxFQUFFOzs0QkFDakRHLEVBQUVKLElBQUk7NEJBQ05KLGFBQWFRLEVBQUVILEVBQUUsS0FBS0osa0JBQWtCOzt1QkFGOUJPLEVBQUVILEVBQUU7Ozs7NEJBSWxCOzs7Ozs7OzBCQUtQLDhEQUFDRjswQkFBS0osU0FBU0EsTUFBTVksT0FBTzs7Ozs7Ozs7Ozs7O0FBR2xDLENBQUM7R0E1QmVmOztRQUNJRiw2Q0FBVUE7UUFFMUJDLG1EQUFnQkE7OztLQUhKQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9OZXR3b3JrU3dpdGNoZXIudHN4P2Q2NTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlTmV0d29yaywgdXNlU3dpdGNoTmV0d29yayB9IGZyb20gJ3dhZ21pJ1xuXG5leHBvcnQgZnVuY3Rpb24gTmV0d29ya1N3aXRjaGVyKCkge1xuICBjb25zdCB7IGNoYWluIH0gPSB1c2VOZXR3b3JrKClcbiAgY29uc3QgeyBjaGFpbnMsIGVycm9yLCBpc0xvYWRpbmcsIHBlbmRpbmdDaGFpbklkLCBzd2l0Y2hOZXR3b3JrIH0gPVxuICAgIHVzZVN3aXRjaE5ldHdvcmsoKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIENvbm5lY3RlZCB0byB7Y2hhaW4/Lm5hbWUgPz8gY2hhaW4/LmlkfVxuICAgICAgICB7Y2hhaW4/LnVuc3VwcG9ydGVkICYmICcgKHVuc3VwcG9ydGVkKSd9XG4gICAgICA8L2Rpdj5cblxuICAgICAge3N3aXRjaE5ldHdvcmsgJiYgKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIHtjaGFpbnMubWFwKCh4KSA9PlxuICAgICAgICAgICAgeC5pZCA9PT0gY2hhaW4/LmlkID8gbnVsbCA6IChcbiAgICAgICAgICAgICAgPGJ1dHRvbiBrZXk9e3guaWR9IG9uQ2xpY2s9eygpID0+IHN3aXRjaE5ldHdvcmsoeC5pZCl9PlxuICAgICAgICAgICAgICAgIHt4Lm5hbWV9XG4gICAgICAgICAgICAgICAge2lzTG9hZGluZyAmJiB4LmlkID09PSBwZW5kaW5nQ2hhaW5JZCAmJiAnIChzd2l0Y2hpbmcpJ31cbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICApLFxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cblxuICAgICAgPGRpdj57ZXJyb3IgJiYgZXJyb3IubWVzc2FnZX08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl0sIm5hbWVzIjpbInVzZU5ldHdvcmsiLCJ1c2VTd2l0Y2hOZXR3b3JrIiwiTmV0d29ya1N3aXRjaGVyIiwiY2hhaW4iLCJjaGFpbnMiLCJlcnJvciIsImlzTG9hZGluZyIsInBlbmRpbmdDaGFpbklkIiwic3dpdGNoTmV0d29yayIsImRpdiIsIm5hbWUiLCJpZCIsInVuc3VwcG9ydGVkIiwibWFwIiwieCIsImJ1dHRvbiIsIm9uQ2xpY2siLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/NetworkSwitcher.tsx\n"));

/***/ }),

/***/ "./src/components/index.ts":
/*!*********************************!*\
  !*** ./src/components/index.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Account\": function() { return /* reexport safe */ _Account__WEBPACK_IMPORTED_MODULE_0__.Account; },\n/* harmony export */   \"Connect\": function() { return /* reexport safe */ _Connect__WEBPACK_IMPORTED_MODULE_1__.Connect; },\n/* harmony export */   \"Counter\": function() { return /* reexport safe */ _Counter__WEBPACK_IMPORTED_MODULE_2__.Counter; },\n/* harmony export */   \"NetworkSwitcher\": function() { return /* reexport safe */ _NetworkSwitcher__WEBPACK_IMPORTED_MODULE_3__.NetworkSwitcher; }\n/* harmony export */ });\n/* harmony import */ var _Account__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Account */ \"./src/components/Account.tsx\");\n/* harmony import */ var _Connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Connect */ \"./src/components/Connect.tsx\");\n/* harmony import */ var _Counter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Counter */ \"./src/components/Counter.tsx\");\n/* harmony import */ var _NetworkSwitcher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NetworkSwitcher */ \"./src/components/NetworkSwitcher.tsx\");\n\n\n\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFtQztBQUNBO0FBQ0E7QUFDZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvaW5kZXgudHM/MGYzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBBY2NvdW50IH0gZnJvbSAnLi9BY2NvdW50J1xuZXhwb3J0IHsgQ29ubmVjdCB9IGZyb20gJy4vQ29ubmVjdCdcbmV4cG9ydCB7IENvdW50ZXIgfSBmcm9tICcuL0NvdW50ZXInXG5leHBvcnQgeyBOZXR3b3JrU3dpdGNoZXIgfSBmcm9tICcuL05ldHdvcmtTd2l0Y2hlcidcbiJdLCJuYW1lcyI6WyJBY2NvdW50IiwiQ29ubmVjdCIsIkNvdW50ZXIiLCJOZXR3b3JrU3dpdGNoZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/index.ts\n"));

/***/ }),

/***/ "./src/generated.ts":
/*!**************************!*\
  !*** ./src/generated.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"accessControlABI\": function() { return /* binding */ accessControlABI; },\n/* harmony export */   \"accessControlEnumerableABI\": function() { return /* binding */ accessControlEnumerableABI; },\n/* harmony export */   \"counterfactualVaultABI\": function() { return /* binding */ counterfactualVaultABI; },\n/* harmony export */   \"counterfactualVaultControllerABI\": function() { return /* binding */ counterfactualVaultControllerABI; },\n/* harmony export */   \"counterfactualVaultControllerFactoryABI\": function() { return /* binding */ counterfactualVaultControllerFactoryABI; },\n/* harmony export */   \"erc165ABI\": function() { return /* binding */ erc165ABI; },\n/* harmony export */   \"erc20ABI\": function() { return /* binding */ erc20ABI; },\n/* harmony export */   \"erc20BurnableABI\": function() { return /* binding */ erc20BurnableABI; },\n/* harmony export */   \"erc20PausableABI\": function() { return /* binding */ erc20PausableABI; },\n/* harmony export */   \"erc20PresetMinterPauserABI\": function() { return /* binding */ erc20PresetMinterPauserABI; },\n/* harmony export */   \"iAccessControlABI\": function() { return /* binding */ iAccessControlABI; },\n/* harmony export */   \"iAccessControlEnumerableABI\": function() { return /* binding */ iAccessControlEnumerableABI; },\n/* harmony export */   \"ierc1155ABI\": function() { return /* binding */ ierc1155ABI; },\n/* harmony export */   \"ierc165ABI\": function() { return /* binding */ ierc165ABI; },\n/* harmony export */   \"ierc20ABI\": function() { return /* binding */ ierc20ABI; },\n/* harmony export */   \"ierc20MetadataABI\": function() { return /* binding */ ierc20MetadataABI; },\n/* harmony export */   \"ierc721ABI\": function() { return /* binding */ ierc721ABI; },\n/* harmony export */   \"minimalProxyFactoryABI\": function() { return /* binding */ minimalProxyFactoryABI; },\n/* harmony export */   \"ownableABI\": function() { return /* binding */ ownableABI; },\n/* harmony export */   \"pausableABI\": function() { return /* binding */ pausableABI; },\n/* harmony export */   \"testCounterfactualVaultControllerABI\": function() { return /* binding */ testCounterfactualVaultControllerABI; },\n/* harmony export */   \"useAccessControl\": function() { return /* binding */ useAccessControl; },\n/* harmony export */   \"useAccessControlDefaultAdminRole\": function() { return /* binding */ useAccessControlDefaultAdminRole; },\n/* harmony export */   \"useAccessControlEnumerable\": function() { return /* binding */ useAccessControlEnumerable; },\n/* harmony export */   \"useAccessControlEnumerableDefaultAdminRole\": function() { return /* binding */ useAccessControlEnumerableDefaultAdminRole; },\n/* harmony export */   \"useAccessControlEnumerableEvent\": function() { return /* binding */ useAccessControlEnumerableEvent; },\n/* harmony export */   \"useAccessControlEnumerableGetRoleAdmin\": function() { return /* binding */ useAccessControlEnumerableGetRoleAdmin; },\n/* harmony export */   \"useAccessControlEnumerableGetRoleMember\": function() { return /* binding */ useAccessControlEnumerableGetRoleMember; },\n/* harmony export */   \"useAccessControlEnumerableGetRoleMemberCount\": function() { return /* binding */ useAccessControlEnumerableGetRoleMemberCount; },\n/* harmony export */   \"useAccessControlEnumerableGrantRole\": function() { return /* binding */ useAccessControlEnumerableGrantRole; },\n/* harmony export */   \"useAccessControlEnumerableHasRole\": function() { return /* binding */ useAccessControlEnumerableHasRole; },\n/* harmony export */   \"useAccessControlEnumerableRead\": function() { return /* binding */ useAccessControlEnumerableRead; },\n/* harmony export */   \"useAccessControlEnumerableRenounceRole\": function() { return /* binding */ useAccessControlEnumerableRenounceRole; },\n/* harmony export */   \"useAccessControlEnumerableRevokeRole\": function() { return /* binding */ useAccessControlEnumerableRevokeRole; },\n/* harmony export */   \"useAccessControlEnumerableRoleAdminChangedEvent\": function() { return /* binding */ useAccessControlEnumerableRoleAdminChangedEvent; },\n/* harmony export */   \"useAccessControlEnumerableRoleGrantedEvent\": function() { return /* binding */ useAccessControlEnumerableRoleGrantedEvent; },\n/* harmony export */   \"useAccessControlEnumerableRoleRevokedEvent\": function() { return /* binding */ useAccessControlEnumerableRoleRevokedEvent; },\n/* harmony export */   \"useAccessControlEnumerableSupportsInterface\": function() { return /* binding */ useAccessControlEnumerableSupportsInterface; },\n/* harmony export */   \"useAccessControlEnumerableWrite\": function() { return /* binding */ useAccessControlEnumerableWrite; },\n/* harmony export */   \"useAccessControlEvent\": function() { return /* binding */ useAccessControlEvent; },\n/* harmony export */   \"useAccessControlGetRoleAdmin\": function() { return /* binding */ useAccessControlGetRoleAdmin; },\n/* harmony export */   \"useAccessControlGrantRole\": function() { return /* binding */ useAccessControlGrantRole; },\n/* harmony export */   \"useAccessControlHasRole\": function() { return /* binding */ useAccessControlHasRole; },\n/* harmony export */   \"useAccessControlRead\": function() { return /* binding */ useAccessControlRead; },\n/* harmony export */   \"useAccessControlRenounceRole\": function() { return /* binding */ useAccessControlRenounceRole; },\n/* harmony export */   \"useAccessControlRevokeRole\": function() { return /* binding */ useAccessControlRevokeRole; },\n/* harmony export */   \"useAccessControlRoleAdminChangedEvent\": function() { return /* binding */ useAccessControlRoleAdminChangedEvent; },\n/* harmony export */   \"useAccessControlRoleGrantedEvent\": function() { return /* binding */ useAccessControlRoleGrantedEvent; },\n/* harmony export */   \"useAccessControlRoleRevokedEvent\": function() { return /* binding */ useAccessControlRoleRevokedEvent; },\n/* harmony export */   \"useAccessControlSupportsInterface\": function() { return /* binding */ useAccessControlSupportsInterface; },\n/* harmony export */   \"useAccessControlWrite\": function() { return /* binding */ useAccessControlWrite; },\n/* harmony export */   \"useCounterfactualVault\": function() { return /* binding */ useCounterfactualVault; },\n/* harmony export */   \"useCounterfactualVaultController\": function() { return /* binding */ useCounterfactualVaultController; },\n/* harmony export */   \"useCounterfactualVaultControllerComputeAddress\": function() { return /* binding */ useCounterfactualVaultControllerComputeAddress; },\n/* harmony export */   \"useCounterfactualVaultControllerCounterfactualWalletInstance\": function() { return /* binding */ useCounterfactualVaultControllerCounterfactualWalletInstance; },\n/* harmony export */   \"useCounterfactualVaultControllerEvent\": function() { return /* binding */ useCounterfactualVaultControllerEvent; },\n/* harmony export */   \"useCounterfactualVaultControllerExecuteCalls\": function() { return /* binding */ useCounterfactualVaultControllerExecuteCalls; },\n/* harmony export */   \"useCounterfactualVaultControllerExecutedEvent\": function() { return /* binding */ useCounterfactualVaultControllerExecutedEvent; },\n/* harmony export */   \"useCounterfactualVaultControllerFactory\": function() { return /* binding */ useCounterfactualVaultControllerFactory; },\n/* harmony export */   \"useCounterfactualVaultControllerFactoryCounterfactualVaultControllerCreatedEvent\": function() { return /* binding */ useCounterfactualVaultControllerFactoryCounterfactualVaultControllerCreatedEvent; },\n/* harmony export */   \"useCounterfactualVaultControllerFactoryCreateCounterfactualVaultController\": function() { return /* binding */ useCounterfactualVaultControllerFactoryCreateCounterfactualVaultController; },\n/* harmony export */   \"useCounterfactualVaultControllerFactoryEvent\": function() { return /* binding */ useCounterfactualVaultControllerFactoryEvent; },\n/* harmony export */   \"useCounterfactualVaultControllerFactoryWrite\": function() { return /* binding */ useCounterfactualVaultControllerFactoryWrite; },\n/* harmony export */   \"useCounterfactualVaultControllerOwner\": function() { return /* binding */ useCounterfactualVaultControllerOwner; },\n/* harmony export */   \"useCounterfactualVaultControllerOwnershipTransferredEvent\": function() { return /* binding */ useCounterfactualVaultControllerOwnershipTransferredEvent; },\n/* harmony export */   \"useCounterfactualVaultControllerRead\": function() { return /* binding */ useCounterfactualVaultControllerRead; },\n/* harmony export */   \"useCounterfactualVaultControllerRenounceOwnership\": function() { return /* binding */ useCounterfactualVaultControllerRenounceOwnership; },\n/* harmony export */   \"useCounterfactualVaultControllerTransferOwnership\": function() { return /* binding */ useCounterfactualVaultControllerTransferOwnership; },\n/* harmony export */   \"useCounterfactualVaultControllerWrite\": function() { return /* binding */ useCounterfactualVaultControllerWrite; },\n/* harmony export */   \"useCounterfactualVaultDestroy\": function() { return /* binding */ useCounterfactualVaultDestroy; },\n/* harmony export */   \"useCounterfactualVaultExecuteCalls\": function() { return /* binding */ useCounterfactualVaultExecuteCalls; },\n/* harmony export */   \"useCounterfactualVaultInitialize\": function() { return /* binding */ useCounterfactualVaultInitialize; },\n/* harmony export */   \"useCounterfactualVaultWrite\": function() { return /* binding */ useCounterfactualVaultWrite; },\n/* harmony export */   \"useErc165\": function() { return /* binding */ useErc165; },\n/* harmony export */   \"useErc165Read\": function() { return /* binding */ useErc165Read; },\n/* harmony export */   \"useErc165SupportsInterface\": function() { return /* binding */ useErc165SupportsInterface; },\n/* harmony export */   \"useErc20\": function() { return /* binding */ useErc20; },\n/* harmony export */   \"useErc20Allowance\": function() { return /* binding */ useErc20Allowance; },\n/* harmony export */   \"useErc20ApprovalEvent\": function() { return /* binding */ useErc20ApprovalEvent; },\n/* harmony export */   \"useErc20Approve\": function() { return /* binding */ useErc20Approve; },\n/* harmony export */   \"useErc20BalanceOf\": function() { return /* binding */ useErc20BalanceOf; },\n/* harmony export */   \"useErc20Burnable\": function() { return /* binding */ useErc20Burnable; },\n/* harmony export */   \"useErc20BurnableAllowance\": function() { return /* binding */ useErc20BurnableAllowance; },\n/* harmony export */   \"useErc20BurnableApprovalEvent\": function() { return /* binding */ useErc20BurnableApprovalEvent; },\n/* harmony export */   \"useErc20BurnableApprove\": function() { return /* binding */ useErc20BurnableApprove; },\n/* harmony export */   \"useErc20BurnableBalanceOf\": function() { return /* binding */ useErc20BurnableBalanceOf; },\n/* harmony export */   \"useErc20BurnableBurn\": function() { return /* binding */ useErc20BurnableBurn; },\n/* harmony export */   \"useErc20BurnableBurnFrom\": function() { return /* binding */ useErc20BurnableBurnFrom; },\n/* harmony export */   \"useErc20BurnableDecimals\": function() { return /* binding */ useErc20BurnableDecimals; },\n/* harmony export */   \"useErc20BurnableDecreaseAllowance\": function() { return /* binding */ useErc20BurnableDecreaseAllowance; },\n/* harmony export */   \"useErc20BurnableEvent\": function() { return /* binding */ useErc20BurnableEvent; },\n/* harmony export */   \"useErc20BurnableIncreaseAllowance\": function() { return /* binding */ useErc20BurnableIncreaseAllowance; },\n/* harmony export */   \"useErc20BurnableName\": function() { return /* binding */ useErc20BurnableName; },\n/* harmony export */   \"useErc20BurnableRead\": function() { return /* binding */ useErc20BurnableRead; },\n/* harmony export */   \"useErc20BurnableSymbol\": function() { return /* binding */ useErc20BurnableSymbol; },\n/* harmony export */   \"useErc20BurnableTotalSupply\": function() { return /* binding */ useErc20BurnableTotalSupply; },\n/* harmony export */   \"useErc20BurnableTransfer\": function() { return /* binding */ useErc20BurnableTransfer; },\n/* harmony export */   \"useErc20BurnableTransferEvent\": function() { return /* binding */ useErc20BurnableTransferEvent; },\n/* harmony export */   \"useErc20BurnableTransferFrom\": function() { return /* binding */ useErc20BurnableTransferFrom; },\n/* harmony export */   \"useErc20BurnableWrite\": function() { return /* binding */ useErc20BurnableWrite; },\n/* harmony export */   \"useErc20Decimals\": function() { return /* binding */ useErc20Decimals; },\n/* harmony export */   \"useErc20DecreaseAllowance\": function() { return /* binding */ useErc20DecreaseAllowance; },\n/* harmony export */   \"useErc20Event\": function() { return /* binding */ useErc20Event; },\n/* harmony export */   \"useErc20IncreaseAllowance\": function() { return /* binding */ useErc20IncreaseAllowance; },\n/* harmony export */   \"useErc20Name\": function() { return /* binding */ useErc20Name; },\n/* harmony export */   \"useErc20Pausable\": function() { return /* binding */ useErc20Pausable; },\n/* harmony export */   \"useErc20PausableAllowance\": function() { return /* binding */ useErc20PausableAllowance; },\n/* harmony export */   \"useErc20PausableApprovalEvent\": function() { return /* binding */ useErc20PausableApprovalEvent; },\n/* harmony export */   \"useErc20PausableApprove\": function() { return /* binding */ useErc20PausableApprove; },\n/* harmony export */   \"useErc20PausableBalanceOf\": function() { return /* binding */ useErc20PausableBalanceOf; },\n/* harmony export */   \"useErc20PausableDecimals\": function() { return /* binding */ useErc20PausableDecimals; },\n/* harmony export */   \"useErc20PausableDecreaseAllowance\": function() { return /* binding */ useErc20PausableDecreaseAllowance; },\n/* harmony export */   \"useErc20PausableEvent\": function() { return /* binding */ useErc20PausableEvent; },\n/* harmony export */   \"useErc20PausableIncreaseAllowance\": function() { return /* binding */ useErc20PausableIncreaseAllowance; },\n/* harmony export */   \"useErc20PausableName\": function() { return /* binding */ useErc20PausableName; },\n/* harmony export */   \"useErc20PausablePaused\": function() { return /* binding */ useErc20PausablePaused; },\n/* harmony export */   \"useErc20PausablePausedEvent\": function() { return /* binding */ useErc20PausablePausedEvent; },\n/* harmony export */   \"useErc20PausableRead\": function() { return /* binding */ useErc20PausableRead; },\n/* harmony export */   \"useErc20PausableSymbol\": function() { return /* binding */ useErc20PausableSymbol; },\n/* harmony export */   \"useErc20PausableTotalSupply\": function() { return /* binding */ useErc20PausableTotalSupply; },\n/* harmony export */   \"useErc20PausableTransfer\": function() { return /* binding */ useErc20PausableTransfer; },\n/* harmony export */   \"useErc20PausableTransferEvent\": function() { return /* binding */ useErc20PausableTransferEvent; },\n/* harmony export */   \"useErc20PausableTransferFrom\": function() { return /* binding */ useErc20PausableTransferFrom; },\n/* harmony export */   \"useErc20PausableUnpausedEvent\": function() { return /* binding */ useErc20PausableUnpausedEvent; },\n/* harmony export */   \"useErc20PausableWrite\": function() { return /* binding */ useErc20PausableWrite; },\n/* harmony export */   \"useErc20PresetMinterPauser\": function() { return /* binding */ useErc20PresetMinterPauser; },\n/* harmony export */   \"useErc20PresetMinterPauserAllowance\": function() { return /* binding */ useErc20PresetMinterPauserAllowance; },\n/* harmony export */   \"useErc20PresetMinterPauserApprovalEvent\": function() { return /* binding */ useErc20PresetMinterPauserApprovalEvent; },\n/* harmony export */   \"useErc20PresetMinterPauserApprove\": function() { return /* binding */ useErc20PresetMinterPauserApprove; },\n/* harmony export */   \"useErc20PresetMinterPauserBalanceOf\": function() { return /* binding */ useErc20PresetMinterPauserBalanceOf; },\n/* harmony export */   \"useErc20PresetMinterPauserBurn\": function() { return /* binding */ useErc20PresetMinterPauserBurn; },\n/* harmony export */   \"useErc20PresetMinterPauserBurnFrom\": function() { return /* binding */ useErc20PresetMinterPauserBurnFrom; },\n/* harmony export */   \"useErc20PresetMinterPauserDecimals\": function() { return /* binding */ useErc20PresetMinterPauserDecimals; },\n/* harmony export */   \"useErc20PresetMinterPauserDecreaseAllowance\": function() { return /* binding */ useErc20PresetMinterPauserDecreaseAllowance; },\n/* harmony export */   \"useErc20PresetMinterPauserDefaultAdminRole\": function() { return /* binding */ useErc20PresetMinterPauserDefaultAdminRole; },\n/* harmony export */   \"useErc20PresetMinterPauserEvent\": function() { return /* binding */ useErc20PresetMinterPauserEvent; },\n/* harmony export */   \"useErc20PresetMinterPauserGetRoleAdmin\": function() { return /* binding */ useErc20PresetMinterPauserGetRoleAdmin; },\n/* harmony export */   \"useErc20PresetMinterPauserGetRoleMember\": function() { return /* binding */ useErc20PresetMinterPauserGetRoleMember; },\n/* harmony export */   \"useErc20PresetMinterPauserGetRoleMemberCount\": function() { return /* binding */ useErc20PresetMinterPauserGetRoleMemberCount; },\n/* harmony export */   \"useErc20PresetMinterPauserGrantRole\": function() { return /* binding */ useErc20PresetMinterPauserGrantRole; },\n/* harmony export */   \"useErc20PresetMinterPauserHasRole\": function() { return /* binding */ useErc20PresetMinterPauserHasRole; },\n/* harmony export */   \"useErc20PresetMinterPauserIncreaseAllowance\": function() { return /* binding */ useErc20PresetMinterPauserIncreaseAllowance; },\n/* harmony export */   \"useErc20PresetMinterPauserMint\": function() { return /* binding */ useErc20PresetMinterPauserMint; },\n/* harmony export */   \"useErc20PresetMinterPauserMinterRole\": function() { return /* binding */ useErc20PresetMinterPauserMinterRole; },\n/* harmony export */   \"useErc20PresetMinterPauserName\": function() { return /* binding */ useErc20PresetMinterPauserName; },\n/* harmony export */   \"useErc20PresetMinterPauserPause\": function() { return /* binding */ useErc20PresetMinterPauserPause; },\n/* harmony export */   \"useErc20PresetMinterPauserPaused\": function() { return /* binding */ useErc20PresetMinterPauserPaused; },\n/* harmony export */   \"useErc20PresetMinterPauserPausedEvent\": function() { return /* binding */ useErc20PresetMinterPauserPausedEvent; },\n/* harmony export */   \"useErc20PresetMinterPauserPauserRole\": function() { return /* binding */ useErc20PresetMinterPauserPauserRole; },\n/* harmony export */   \"useErc20PresetMinterPauserRead\": function() { return /* binding */ useErc20PresetMinterPauserRead; },\n/* harmony export */   \"useErc20PresetMinterPauserRenounceRole\": function() { return /* binding */ useErc20PresetMinterPauserRenounceRole; },\n/* harmony export */   \"useErc20PresetMinterPauserRevokeRole\": function() { return /* binding */ useErc20PresetMinterPauserRevokeRole; },\n/* harmony export */   \"useErc20PresetMinterPauserRoleAdminChangedEvent\": function() { return /* binding */ useErc20PresetMinterPauserRoleAdminChangedEvent; },\n/* harmony export */   \"useErc20PresetMinterPauserRoleGrantedEvent\": function() { return /* binding */ useErc20PresetMinterPauserRoleGrantedEvent; },\n/* harmony export */   \"useErc20PresetMinterPauserRoleRevokedEvent\": function() { return /* binding */ useErc20PresetMinterPauserRoleRevokedEvent; },\n/* harmony export */   \"useErc20PresetMinterPauserSupportsInterface\": function() { return /* binding */ useErc20PresetMinterPauserSupportsInterface; },\n/* harmony export */   \"useErc20PresetMinterPauserSymbol\": function() { return /* binding */ useErc20PresetMinterPauserSymbol; },\n/* harmony export */   \"useErc20PresetMinterPauserTotalSupply\": function() { return /* binding */ useErc20PresetMinterPauserTotalSupply; },\n/* harmony export */   \"useErc20PresetMinterPauserTransfer\": function() { return /* binding */ useErc20PresetMinterPauserTransfer; },\n/* harmony export */   \"useErc20PresetMinterPauserTransferEvent\": function() { return /* binding */ useErc20PresetMinterPauserTransferEvent; },\n/* harmony export */   \"useErc20PresetMinterPauserTransferFrom\": function() { return /* binding */ useErc20PresetMinterPauserTransferFrom; },\n/* harmony export */   \"useErc20PresetMinterPauserUnpause\": function() { return /* binding */ useErc20PresetMinterPauserUnpause; },\n/* harmony export */   \"useErc20PresetMinterPauserUnpausedEvent\": function() { return /* binding */ useErc20PresetMinterPauserUnpausedEvent; },\n/* harmony export */   \"useErc20PresetMinterPauserWrite\": function() { return /* binding */ useErc20PresetMinterPauserWrite; },\n/* harmony export */   \"useErc20Read\": function() { return /* binding */ useErc20Read; },\n/* harmony export */   \"useErc20Symbol\": function() { return /* binding */ useErc20Symbol; },\n/* harmony export */   \"useErc20TotalSupply\": function() { return /* binding */ useErc20TotalSupply; },\n/* harmony export */   \"useErc20Transfer\": function() { return /* binding */ useErc20Transfer; },\n/* harmony export */   \"useErc20TransferEvent\": function() { return /* binding */ useErc20TransferEvent; },\n/* harmony export */   \"useErc20TransferFrom\": function() { return /* binding */ useErc20TransferFrom; },\n/* harmony export */   \"useErc20Write\": function() { return /* binding */ useErc20Write; },\n/* harmony export */   \"useIAccessControl\": function() { return /* binding */ useIAccessControl; },\n/* harmony export */   \"useIAccessControlEnumerable\": function() { return /* binding */ useIAccessControlEnumerable; },\n/* harmony export */   \"useIAccessControlEnumerableEvent\": function() { return /* binding */ useIAccessControlEnumerableEvent; },\n/* harmony export */   \"useIAccessControlEnumerableGetRoleAdmin\": function() { return /* binding */ useIAccessControlEnumerableGetRoleAdmin; },\n/* harmony export */   \"useIAccessControlEnumerableGetRoleMember\": function() { return /* binding */ useIAccessControlEnumerableGetRoleMember; },\n/* harmony export */   \"useIAccessControlEnumerableGetRoleMemberCount\": function() { return /* binding */ useIAccessControlEnumerableGetRoleMemberCount; },\n/* harmony export */   \"useIAccessControlEnumerableGrantRole\": function() { return /* binding */ useIAccessControlEnumerableGrantRole; },\n/* harmony export */   \"useIAccessControlEnumerableHasRole\": function() { return /* binding */ useIAccessControlEnumerableHasRole; },\n/* harmony export */   \"useIAccessControlEnumerableRead\": function() { return /* binding */ useIAccessControlEnumerableRead; },\n/* harmony export */   \"useIAccessControlEnumerableRenounceRole\": function() { return /* binding */ useIAccessControlEnumerableRenounceRole; },\n/* harmony export */   \"useIAccessControlEnumerableRevokeRole\": function() { return /* binding */ useIAccessControlEnumerableRevokeRole; },\n/* harmony export */   \"useIAccessControlEnumerableRoleAdminChangedEvent\": function() { return /* binding */ useIAccessControlEnumerableRoleAdminChangedEvent; },\n/* harmony export */   \"useIAccessControlEnumerableRoleGrantedEvent\": function() { return /* binding */ useIAccessControlEnumerableRoleGrantedEvent; },\n/* harmony export */   \"useIAccessControlEnumerableRoleRevokedEvent\": function() { return /* binding */ useIAccessControlEnumerableRoleRevokedEvent; },\n/* harmony export */   \"useIAccessControlEnumerableWrite\": function() { return /* binding */ useIAccessControlEnumerableWrite; },\n/* harmony export */   \"useIAccessControlEvent\": function() { return /* binding */ useIAccessControlEvent; },\n/* harmony export */   \"useIAccessControlGetRoleAdmin\": function() { return /* binding */ useIAccessControlGetRoleAdmin; },\n/* harmony export */   \"useIAccessControlGrantRole\": function() { return /* binding */ useIAccessControlGrantRole; },\n/* harmony export */   \"useIAccessControlHasRole\": function() { return /* binding */ useIAccessControlHasRole; },\n/* harmony export */   \"useIAccessControlRead\": function() { return /* binding */ useIAccessControlRead; },\n/* harmony export */   \"useIAccessControlRenounceRole\": function() { return /* binding */ useIAccessControlRenounceRole; },\n/* harmony export */   \"useIAccessControlRevokeRole\": function() { return /* binding */ useIAccessControlRevokeRole; },\n/* harmony export */   \"useIAccessControlRoleAdminChangedEvent\": function() { return /* binding */ useIAccessControlRoleAdminChangedEvent; },\n/* harmony export */   \"useIAccessControlRoleGrantedEvent\": function() { return /* binding */ useIAccessControlRoleGrantedEvent; },\n/* harmony export */   \"useIAccessControlRoleRevokedEvent\": function() { return /* binding */ useIAccessControlRoleRevokedEvent; },\n/* harmony export */   \"useIAccessControlWrite\": function() { return /* binding */ useIAccessControlWrite; },\n/* harmony export */   \"useIerc1155\": function() { return /* binding */ useIerc1155; },\n/* harmony export */   \"useIerc1155ApprovalForAllEvent\": function() { return /* binding */ useIerc1155ApprovalForAllEvent; },\n/* harmony export */   \"useIerc1155BalanceOf\": function() { return /* binding */ useIerc1155BalanceOf; },\n/* harmony export */   \"useIerc1155BalanceOfBatch\": function() { return /* binding */ useIerc1155BalanceOfBatch; },\n/* harmony export */   \"useIerc1155Event\": function() { return /* binding */ useIerc1155Event; },\n/* harmony export */   \"useIerc1155IsApprovedForAll\": function() { return /* binding */ useIerc1155IsApprovedForAll; },\n/* harmony export */   \"useIerc1155Read\": function() { return /* binding */ useIerc1155Read; },\n/* harmony export */   \"useIerc1155SafeBatchTransferFrom\": function() { return /* binding */ useIerc1155SafeBatchTransferFrom; },\n/* harmony export */   \"useIerc1155SafeTransferFrom\": function() { return /* binding */ useIerc1155SafeTransferFrom; },\n/* harmony export */   \"useIerc1155SetApprovalForAll\": function() { return /* binding */ useIerc1155SetApprovalForAll; },\n/* harmony export */   \"useIerc1155SupportsInterface\": function() { return /* binding */ useIerc1155SupportsInterface; },\n/* harmony export */   \"useIerc1155TransferBatchEvent\": function() { return /* binding */ useIerc1155TransferBatchEvent; },\n/* harmony export */   \"useIerc1155TransferSingleEvent\": function() { return /* binding */ useIerc1155TransferSingleEvent; },\n/* harmony export */   \"useIerc1155UriEvent\": function() { return /* binding */ useIerc1155UriEvent; },\n/* harmony export */   \"useIerc1155Write\": function() { return /* binding */ useIerc1155Write; },\n/* harmony export */   \"useIerc165\": function() { return /* binding */ useIerc165; },\n/* harmony export */   \"useIerc165Read\": function() { return /* binding */ useIerc165Read; },\n/* harmony export */   \"useIerc165SupportsInterface\": function() { return /* binding */ useIerc165SupportsInterface; },\n/* harmony export */   \"useIerc20\": function() { return /* binding */ useIerc20; },\n/* harmony export */   \"useIerc20Allowance\": function() { return /* binding */ useIerc20Allowance; },\n/* harmony export */   \"useIerc20ApprovalEvent\": function() { return /* binding */ useIerc20ApprovalEvent; },\n/* harmony export */   \"useIerc20Approve\": function() { return /* binding */ useIerc20Approve; },\n/* harmony export */   \"useIerc20BalanceOf\": function() { return /* binding */ useIerc20BalanceOf; },\n/* harmony export */   \"useIerc20Event\": function() { return /* binding */ useIerc20Event; },\n/* harmony export */   \"useIerc20Metadata\": function() { return /* binding */ useIerc20Metadata; },\n/* harmony export */   \"useIerc20MetadataAllowance\": function() { return /* binding */ useIerc20MetadataAllowance; },\n/* harmony export */   \"useIerc20MetadataApprovalEvent\": function() { return /* binding */ useIerc20MetadataApprovalEvent; },\n/* harmony export */   \"useIerc20MetadataApprove\": function() { return /* binding */ useIerc20MetadataApprove; },\n/* harmony export */   \"useIerc20MetadataBalanceOf\": function() { return /* binding */ useIerc20MetadataBalanceOf; },\n/* harmony export */   \"useIerc20MetadataDecimals\": function() { return /* binding */ useIerc20MetadataDecimals; },\n/* harmony export */   \"useIerc20MetadataEvent\": function() { return /* binding */ useIerc20MetadataEvent; },\n/* harmony export */   \"useIerc20MetadataName\": function() { return /* binding */ useIerc20MetadataName; },\n/* harmony export */   \"useIerc20MetadataRead\": function() { return /* binding */ useIerc20MetadataRead; },\n/* harmony export */   \"useIerc20MetadataSymbol\": function() { return /* binding */ useIerc20MetadataSymbol; },\n/* harmony export */   \"useIerc20MetadataTotalSupply\": function() { return /* binding */ useIerc20MetadataTotalSupply; },\n/* harmony export */   \"useIerc20MetadataTransfer\": function() { return /* binding */ useIerc20MetadataTransfer; },\n/* harmony export */   \"useIerc20MetadataTransferEvent\": function() { return /* binding */ useIerc20MetadataTransferEvent; },\n/* harmony export */   \"useIerc20MetadataTransferFrom\": function() { return /* binding */ useIerc20MetadataTransferFrom; },\n/* harmony export */   \"useIerc20MetadataWrite\": function() { return /* binding */ useIerc20MetadataWrite; },\n/* harmony export */   \"useIerc20Read\": function() { return /* binding */ useIerc20Read; },\n/* harmony export */   \"useIerc20TotalSupply\": function() { return /* binding */ useIerc20TotalSupply; },\n/* harmony export */   \"useIerc20Transfer\": function() { return /* binding */ useIerc20Transfer; },\n/* harmony export */   \"useIerc20TransferEvent\": function() { return /* binding */ useIerc20TransferEvent; },\n/* harmony export */   \"useIerc20TransferFrom\": function() { return /* binding */ useIerc20TransferFrom; },\n/* harmony export */   \"useIerc20Write\": function() { return /* binding */ useIerc20Write; },\n/* harmony export */   \"useIerc721\": function() { return /* binding */ useIerc721; },\n/* harmony export */   \"useIerc721ApprovalEvent\": function() { return /* binding */ useIerc721ApprovalEvent; },\n/* harmony export */   \"useIerc721ApprovalForAllEvent\": function() { return /* binding */ useIerc721ApprovalForAllEvent; },\n/* harmony export */   \"useIerc721Approve\": function() { return /* binding */ useIerc721Approve; },\n/* harmony export */   \"useIerc721BalanceOf\": function() { return /* binding */ useIerc721BalanceOf; },\n/* harmony export */   \"useIerc721Event\": function() { return /* binding */ useIerc721Event; },\n/* harmony export */   \"useIerc721GetApproved\": function() { return /* binding */ useIerc721GetApproved; },\n/* harmony export */   \"useIerc721IsApprovedForAll\": function() { return /* binding */ useIerc721IsApprovedForAll; },\n/* harmony export */   \"useIerc721OwnerOf\": function() { return /* binding */ useIerc721OwnerOf; },\n/* harmony export */   \"useIerc721Read\": function() { return /* binding */ useIerc721Read; },\n/* harmony export */   \"useIerc721SafeTransferFrom\": function() { return /* binding */ useIerc721SafeTransferFrom; },\n/* harmony export */   \"useIerc721SetApprovalForAll\": function() { return /* binding */ useIerc721SetApprovalForAll; },\n/* harmony export */   \"useIerc721SupportsInterface\": function() { return /* binding */ useIerc721SupportsInterface; },\n/* harmony export */   \"useIerc721TransferEvent\": function() { return /* binding */ useIerc721TransferEvent; },\n/* harmony export */   \"useIerc721TransferFrom\": function() { return /* binding */ useIerc721TransferFrom; },\n/* harmony export */   \"useIerc721Write\": function() { return /* binding */ useIerc721Write; },\n/* harmony export */   \"useMinimalProxyFactory\": function() { return /* binding */ useMinimalProxyFactory; },\n/* harmony export */   \"useMinimalProxyFactoryClone\": function() { return /* binding */ useMinimalProxyFactoryClone; },\n/* harmony export */   \"useMinimalProxyFactoryWrite\": function() { return /* binding */ useMinimalProxyFactoryWrite; },\n/* harmony export */   \"useOwnable\": function() { return /* binding */ useOwnable; },\n/* harmony export */   \"useOwnableEvent\": function() { return /* binding */ useOwnableEvent; },\n/* harmony export */   \"useOwnableOwner\": function() { return /* binding */ useOwnableOwner; },\n/* harmony export */   \"useOwnableOwnershipTransferredEvent\": function() { return /* binding */ useOwnableOwnershipTransferredEvent; },\n/* harmony export */   \"useOwnableRead\": function() { return /* binding */ useOwnableRead; },\n/* harmony export */   \"useOwnableRenounceOwnership\": function() { return /* binding */ useOwnableRenounceOwnership; },\n/* harmony export */   \"useOwnableTransferOwnership\": function() { return /* binding */ useOwnableTransferOwnership; },\n/* harmony export */   \"useOwnableWrite\": function() { return /* binding */ useOwnableWrite; },\n/* harmony export */   \"usePausable\": function() { return /* binding */ usePausable; },\n/* harmony export */   \"usePausableEvent\": function() { return /* binding */ usePausableEvent; },\n/* harmony export */   \"usePausablePaused\": function() { return /* binding */ usePausablePaused; },\n/* harmony export */   \"usePausablePausedEvent\": function() { return /* binding */ usePausablePausedEvent; },\n/* harmony export */   \"usePausableRead\": function() { return /* binding */ usePausableRead; },\n/* harmony export */   \"usePausableUnpausedEvent\": function() { return /* binding */ usePausableUnpausedEvent; },\n/* harmony export */   \"usePrepareAccessControlEnumerableGrantRole\": function() { return /* binding */ usePrepareAccessControlEnumerableGrantRole; },\n/* harmony export */   \"usePrepareAccessControlEnumerableRenounceRole\": function() { return /* binding */ usePrepareAccessControlEnumerableRenounceRole; },\n/* harmony export */   \"usePrepareAccessControlEnumerableRevokeRole\": function() { return /* binding */ usePrepareAccessControlEnumerableRevokeRole; },\n/* harmony export */   \"usePrepareAccessControlEnumerableWrite\": function() { return /* binding */ usePrepareAccessControlEnumerableWrite; },\n/* harmony export */   \"usePrepareAccessControlGrantRole\": function() { return /* binding */ usePrepareAccessControlGrantRole; },\n/* harmony export */   \"usePrepareAccessControlRenounceRole\": function() { return /* binding */ usePrepareAccessControlRenounceRole; },\n/* harmony export */   \"usePrepareAccessControlRevokeRole\": function() { return /* binding */ usePrepareAccessControlRevokeRole; },\n/* harmony export */   \"usePrepareAccessControlWrite\": function() { return /* binding */ usePrepareAccessControlWrite; },\n/* harmony export */   \"usePrepareCounterfactualVaultControllerExecuteCalls\": function() { return /* binding */ usePrepareCounterfactualVaultControllerExecuteCalls; },\n/* harmony export */   \"usePrepareCounterfactualVaultControllerFactoryCreateCounterfactualVaultController\": function() { return /* binding */ usePrepareCounterfactualVaultControllerFactoryCreateCounterfactualVaultController; },\n/* harmony export */   \"usePrepareCounterfactualVaultControllerFactoryWrite\": function() { return /* binding */ usePrepareCounterfactualVaultControllerFactoryWrite; },\n/* harmony export */   \"usePrepareCounterfactualVaultControllerRenounceOwnership\": function() { return /* binding */ usePrepareCounterfactualVaultControllerRenounceOwnership; },\n/* harmony export */   \"usePrepareCounterfactualVaultControllerTransferOwnership\": function() { return /* binding */ usePrepareCounterfactualVaultControllerTransferOwnership; },\n/* harmony export */   \"usePrepareCounterfactualVaultControllerWrite\": function() { return /* binding */ usePrepareCounterfactualVaultControllerWrite; },\n/* harmony export */   \"usePrepareCounterfactualVaultDestroy\": function() { return /* binding */ usePrepareCounterfactualVaultDestroy; },\n/* harmony export */   \"usePrepareCounterfactualVaultExecuteCalls\": function() { return /* binding */ usePrepareCounterfactualVaultExecuteCalls; },\n/* harmony export */   \"usePrepareCounterfactualVaultInitialize\": function() { return /* binding */ usePrepareCounterfactualVaultInitialize; },\n/* harmony export */   \"usePrepareCounterfactualVaultWrite\": function() { return /* binding */ usePrepareCounterfactualVaultWrite; },\n/* harmony export */   \"usePrepareErc20Approve\": function() { return /* binding */ usePrepareErc20Approve; },\n/* harmony export */   \"usePrepareErc20BurnableApprove\": function() { return /* binding */ usePrepareErc20BurnableApprove; },\n/* harmony export */   \"usePrepareErc20BurnableBurn\": function() { return /* binding */ usePrepareErc20BurnableBurn; },\n/* harmony export */   \"usePrepareErc20BurnableBurnFrom\": function() { return /* binding */ usePrepareErc20BurnableBurnFrom; },\n/* harmony export */   \"usePrepareErc20BurnableDecreaseAllowance\": function() { return /* binding */ usePrepareErc20BurnableDecreaseAllowance; },\n/* harmony export */   \"usePrepareErc20BurnableIncreaseAllowance\": function() { return /* binding */ usePrepareErc20BurnableIncreaseAllowance; },\n/* harmony export */   \"usePrepareErc20BurnableTransfer\": function() { return /* binding */ usePrepareErc20BurnableTransfer; },\n/* harmony export */   \"usePrepareErc20BurnableTransferFrom\": function() { return /* binding */ usePrepareErc20BurnableTransferFrom; },\n/* harmony export */   \"usePrepareErc20BurnableWrite\": function() { return /* binding */ usePrepareErc20BurnableWrite; },\n/* harmony export */   \"usePrepareErc20DecreaseAllowance\": function() { return /* binding */ usePrepareErc20DecreaseAllowance; },\n/* harmony export */   \"usePrepareErc20IncreaseAllowance\": function() { return /* binding */ usePrepareErc20IncreaseAllowance; },\n/* harmony export */   \"usePrepareErc20PausableApprove\": function() { return /* binding */ usePrepareErc20PausableApprove; },\n/* harmony export */   \"usePrepareErc20PausableDecreaseAllowance\": function() { return /* binding */ usePrepareErc20PausableDecreaseAllowance; },\n/* harmony export */   \"usePrepareErc20PausableIncreaseAllowance\": function() { return /* binding */ usePrepareErc20PausableIncreaseAllowance; },\n/* harmony export */   \"usePrepareErc20PausableTransfer\": function() { return /* binding */ usePrepareErc20PausableTransfer; },\n/* harmony export */   \"usePrepareErc20PausableTransferFrom\": function() { return /* binding */ usePrepareErc20PausableTransferFrom; },\n/* harmony export */   \"usePrepareErc20PausableWrite\": function() { return /* binding */ usePrepareErc20PausableWrite; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserApprove\": function() { return /* binding */ usePrepareErc20PresetMinterPauserApprove; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserBurn\": function() { return /* binding */ usePrepareErc20PresetMinterPauserBurn; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserBurnFrom\": function() { return /* binding */ usePrepareErc20PresetMinterPauserBurnFrom; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserDecreaseAllowance\": function() { return /* binding */ usePrepareErc20PresetMinterPauserDecreaseAllowance; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserGrantRole\": function() { return /* binding */ usePrepareErc20PresetMinterPauserGrantRole; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserIncreaseAllowance\": function() { return /* binding */ usePrepareErc20PresetMinterPauserIncreaseAllowance; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserMint\": function() { return /* binding */ usePrepareErc20PresetMinterPauserMint; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserPause\": function() { return /* binding */ usePrepareErc20PresetMinterPauserPause; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserRenounceRole\": function() { return /* binding */ usePrepareErc20PresetMinterPauserRenounceRole; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserRevokeRole\": function() { return /* binding */ usePrepareErc20PresetMinterPauserRevokeRole; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserTransfer\": function() { return /* binding */ usePrepareErc20PresetMinterPauserTransfer; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserTransferFrom\": function() { return /* binding */ usePrepareErc20PresetMinterPauserTransferFrom; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserUnpause\": function() { return /* binding */ usePrepareErc20PresetMinterPauserUnpause; },\n/* harmony export */   \"usePrepareErc20PresetMinterPauserWrite\": function() { return /* binding */ usePrepareErc20PresetMinterPauserWrite; },\n/* harmony export */   \"usePrepareErc20Transfer\": function() { return /* binding */ usePrepareErc20Transfer; },\n/* harmony export */   \"usePrepareErc20TransferFrom\": function() { return /* binding */ usePrepareErc20TransferFrom; },\n/* harmony export */   \"usePrepareErc20Write\": function() { return /* binding */ usePrepareErc20Write; },\n/* harmony export */   \"usePrepareIAccessControlEnumerableGrantRole\": function() { return /* binding */ usePrepareIAccessControlEnumerableGrantRole; },\n/* harmony export */   \"usePrepareIAccessControlEnumerableRenounceRole\": function() { return /* binding */ usePrepareIAccessControlEnumerableRenounceRole; },\n/* harmony export */   \"usePrepareIAccessControlEnumerableRevokeRole\": function() { return /* binding */ usePrepareIAccessControlEnumerableRevokeRole; },\n/* harmony export */   \"usePrepareIAccessControlEnumerableWrite\": function() { return /* binding */ usePrepareIAccessControlEnumerableWrite; },\n/* harmony export */   \"usePrepareIAccessControlGrantRole\": function() { return /* binding */ usePrepareIAccessControlGrantRole; },\n/* harmony export */   \"usePrepareIAccessControlRenounceRole\": function() { return /* binding */ usePrepareIAccessControlRenounceRole; },\n/* harmony export */   \"usePrepareIAccessControlRevokeRole\": function() { return /* binding */ usePrepareIAccessControlRevokeRole; },\n/* harmony export */   \"usePrepareIAccessControlWrite\": function() { return /* binding */ usePrepareIAccessControlWrite; },\n/* harmony export */   \"usePrepareIerc1155SafeBatchTransferFrom\": function() { return /* binding */ usePrepareIerc1155SafeBatchTransferFrom; },\n/* harmony export */   \"usePrepareIerc1155SafeTransferFrom\": function() { return /* binding */ usePrepareIerc1155SafeTransferFrom; },\n/* harmony export */   \"usePrepareIerc1155SetApprovalForAll\": function() { return /* binding */ usePrepareIerc1155SetApprovalForAll; },\n/* harmony export */   \"usePrepareIerc1155Write\": function() { return /* binding */ usePrepareIerc1155Write; },\n/* harmony export */   \"usePrepareIerc20Approve\": function() { return /* binding */ usePrepareIerc20Approve; },\n/* harmony export */   \"usePrepareIerc20MetadataApprove\": function() { return /* binding */ usePrepareIerc20MetadataApprove; },\n/* harmony export */   \"usePrepareIerc20MetadataTransfer\": function() { return /* binding */ usePrepareIerc20MetadataTransfer; },\n/* harmony export */   \"usePrepareIerc20MetadataTransferFrom\": function() { return /* binding */ usePrepareIerc20MetadataTransferFrom; },\n/* harmony export */   \"usePrepareIerc20MetadataWrite\": function() { return /* binding */ usePrepareIerc20MetadataWrite; },\n/* harmony export */   \"usePrepareIerc20Transfer\": function() { return /* binding */ usePrepareIerc20Transfer; },\n/* harmony export */   \"usePrepareIerc20TransferFrom\": function() { return /* binding */ usePrepareIerc20TransferFrom; },\n/* harmony export */   \"usePrepareIerc20Write\": function() { return /* binding */ usePrepareIerc20Write; },\n/* harmony export */   \"usePrepareIerc721Approve\": function() { return /* binding */ usePrepareIerc721Approve; },\n/* harmony export */   \"usePrepareIerc721SafeTransferFrom\": function() { return /* binding */ usePrepareIerc721SafeTransferFrom; },\n/* harmony export */   \"usePrepareIerc721SetApprovalForAll\": function() { return /* binding */ usePrepareIerc721SetApprovalForAll; },\n/* harmony export */   \"usePrepareIerc721TransferFrom\": function() { return /* binding */ usePrepareIerc721TransferFrom; },\n/* harmony export */   \"usePrepareIerc721Write\": function() { return /* binding */ usePrepareIerc721Write; },\n/* harmony export */   \"usePrepareMinimalProxyFactoryClone\": function() { return /* binding */ usePrepareMinimalProxyFactoryClone; },\n/* harmony export */   \"usePrepareMinimalProxyFactoryWrite\": function() { return /* binding */ usePrepareMinimalProxyFactoryWrite; },\n/* harmony export */   \"usePrepareOwnableRenounceOwnership\": function() { return /* binding */ usePrepareOwnableRenounceOwnership; },\n/* harmony export */   \"usePrepareOwnableTransferOwnership\": function() { return /* binding */ usePrepareOwnableTransferOwnership; },\n/* harmony export */   \"usePrepareOwnableWrite\": function() { return /* binding */ usePrepareOwnableWrite; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerDeal\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerDeal; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerDeployCode\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerDeployCode; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerFailed\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerFailed; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerHoax\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerHoax; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerRewind\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerRewind; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerSetUp\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerSetUp; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerSkip\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerSkip; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerStartHoax\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerStartHoax; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerTestExecuteCall\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerTestExecuteCall; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerTip\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerTip; },\n/* harmony export */   \"usePrepareTestCounterfactualVaultControllerWrite\": function() { return /* binding */ usePrepareTestCounterfactualVaultControllerWrite; },\n/* harmony export */   \"useTestCounterfactualVaultController\": function() { return /* binding */ useTestCounterfactualVaultController; },\n/* harmony export */   \"useTestCounterfactualVaultControllerDeal\": function() { return /* binding */ useTestCounterfactualVaultControllerDeal; },\n/* harmony export */   \"useTestCounterfactualVaultControllerDeployCode\": function() { return /* binding */ useTestCounterfactualVaultControllerDeployCode; },\n/* harmony export */   \"useTestCounterfactualVaultControllerEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerFailed\": function() { return /* binding */ useTestCounterfactualVaultControllerFailed; },\n/* harmony export */   \"useTestCounterfactualVaultControllerHoax\": function() { return /* binding */ useTestCounterfactualVaultControllerHoax; },\n/* harmony export */   \"useTestCounterfactualVaultControllerIsTest\": function() { return /* binding */ useTestCounterfactualVaultControllerIsTest; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogAddressEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogAddressEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogBytes32Event\": function() { return /* binding */ useTestCounterfactualVaultControllerLogBytes32Event; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogBytesEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogBytesEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogIntEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogIntEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogNamedAddressEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogNamedAddressEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogNamedBytes32Event\": function() { return /* binding */ useTestCounterfactualVaultControllerLogNamedBytes32Event; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogNamedBytesEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogNamedBytesEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogNamedDecimalIntEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogNamedDecimalIntEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogNamedDecimalUintEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogNamedDecimalUintEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogNamedIntEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogNamedIntEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogNamedStringEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogNamedStringEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogNamedUintEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogNamedUintEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogStringEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogStringEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogUintEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogUintEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerLogsEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerLogsEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerRead\": function() { return /* binding */ useTestCounterfactualVaultControllerRead; },\n/* harmony export */   \"useTestCounterfactualVaultControllerRewind\": function() { return /* binding */ useTestCounterfactualVaultControllerRewind; },\n/* harmony export */   \"useTestCounterfactualVaultControllerSetUp\": function() { return /* binding */ useTestCounterfactualVaultControllerSetUp; },\n/* harmony export */   \"useTestCounterfactualVaultControllerSkip\": function() { return /* binding */ useTestCounterfactualVaultControllerSkip; },\n/* harmony export */   \"useTestCounterfactualVaultControllerStartHoax\": function() { return /* binding */ useTestCounterfactualVaultControllerStartHoax; },\n/* harmony export */   \"useTestCounterfactualVaultControllerTestExecuteCall\": function() { return /* binding */ useTestCounterfactualVaultControllerTestExecuteCall; },\n/* harmony export */   \"useTestCounterfactualVaultControllerTip\": function() { return /* binding */ useTestCounterfactualVaultControllerTip; },\n/* harmony export */   \"useTestCounterfactualVaultControllerVm\": function() { return /* binding */ useTestCounterfactualVaultControllerVm; },\n/* harmony export */   \"useTestCounterfactualVaultControllerWarningDeprecatedEvent\": function() { return /* binding */ useTestCounterfactualVaultControllerWarningDeprecatedEvent; },\n/* harmony export */   \"useTestCounterfactualVaultControllerWrite\": function() { return /* binding */ useTestCounterfactualVaultControllerWrite; }\n/* harmony export */ });\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wagmi */ \"./node_modules/wagmi/dist/index.js\");\n// Generated by @wagmi/cli@0.1.13 on 3/19/2023 at 6:23:38 PM\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AccessControl\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst accessControlABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"previousAdminRole\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"newAdminRole\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            }\n        ],\n        name: \"RoleAdminChanged\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"sender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"RoleGranted\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"sender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"RoleRevoked\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"DEFAULT_ADMIN_ROLE\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ],\n        name: \"getRoleAdmin\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"grantRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"hasRole\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"renounceRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"revokeRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"interfaceId\",\n                internalType: \"bytes4\",\n                type: \"bytes4\"\n            }\n        ],\n        name: \"supportsInterface\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AccessControlEnumerable\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst accessControlEnumerableABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"previousAdminRole\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"newAdminRole\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            }\n        ],\n        name: \"RoleAdminChanged\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"sender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"RoleGranted\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"sender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"RoleRevoked\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"DEFAULT_ADMIN_ROLE\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ],\n        name: \"getRoleAdmin\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"index\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"getRoleMember\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ],\n        name: \"getRoleMemberCount\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"grantRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"hasRole\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"renounceRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"revokeRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"interfaceId\",\n                internalType: \"bytes4\",\n                type: \"bytes4\"\n            }\n        ],\n        name: \"supportsInterface\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CounterfactualVault\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst counterfactualVaultABI = [\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"to\",\n                internalType: \"address payable\",\n                type: \"address\"\n            }\n        ],\n        name: \"destroy\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"calls\",\n                internalType: \"struct CounterfactualVault.Call[]\",\n                type: \"tuple[]\",\n                components: [\n                    {\n                        name: \"to\",\n                        internalType: \"address\",\n                        type: \"address\"\n                    },\n                    {\n                        name: \"value\",\n                        internalType: \"uint256\",\n                        type: \"uint256\"\n                    },\n                    {\n                        name: \"data\",\n                        internalType: \"bytes\",\n                        type: \"bytes\"\n                    }\n                ]\n            }\n        ],\n        name: \"executeCalls\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes[]\",\n                type: \"bytes[]\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [],\n        name: \"initialize\",\n        outputs: []\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CounterfactualVaultController\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst counterfactualVaultControllerABI = [\n    {\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"erc721\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"tokenId\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: true\n            },\n            {\n                name: \"operator\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"Executed\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"previousOwner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"newOwner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"OwnershipTransferred\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"vaultIds\",\n                internalType: \"uint256[]\",\n                type: \"uint256[]\"\n            }\n        ],\n        name: \"computeAddress\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"address[]\",\n                type: \"address[]\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"counterfactualWalletInstance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"contract CounterfactualVault\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"erc721\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"tokenId\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            },\n            {\n                name: \"calls\",\n                internalType: \"struct CounterfactualVault.Call[]\",\n                type: \"tuple[]\",\n                components: [\n                    {\n                        name: \"to\",\n                        internalType: \"address\",\n                        type: \"address\"\n                    },\n                    {\n                        name: \"value\",\n                        internalType: \"uint256\",\n                        type: \"uint256\"\n                    },\n                    {\n                        name: \"data\",\n                        internalType: \"bytes\",\n                        type: \"bytes\"\n                    }\n                ]\n            }\n        ],\n        name: \"executeCalls\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes[]\",\n                type: \"bytes[]\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [],\n        name: \"renounceOwnership\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"newOwner\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"transferOwnership\",\n        outputs: []\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CounterfactualVaultControllerFactory\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst counterfactualVaultControllerFactoryABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"creator\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"counterfactualVaultController\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"CounterfactualVaultControllerCreated\"\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [],\n        name: \"createCounterfactualVaultController\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"contract CounterfactualVaultController\",\n                type: \"address\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TestCounterfactualVaultController\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst testCounterfactualVaultControllerABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"msg\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            }\n        ],\n        name: \"WARNING_Deprecated\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            }\n        ],\n        name: \"log\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: false\n            }\n        ],\n        name: \"log_address\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"\",\n                internalType: \"bytes\",\n                type: \"bytes\",\n                indexed: false\n            }\n        ],\n        name: \"log_bytes\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: false\n            }\n        ],\n        name: \"log_bytes32\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"\",\n                internalType: \"int256\",\n                type: \"int256\",\n                indexed: false\n            }\n        ],\n        name: \"log_int\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"key\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            },\n            {\n                name: \"val\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: false\n            }\n        ],\n        name: \"log_named_address\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"key\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            },\n            {\n                name: \"val\",\n                internalType: \"bytes\",\n                type: \"bytes\",\n                indexed: false\n            }\n        ],\n        name: \"log_named_bytes\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"key\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            },\n            {\n                name: \"val\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: false\n            }\n        ],\n        name: \"log_named_bytes32\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"key\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            },\n            {\n                name: \"val\",\n                internalType: \"int256\",\n                type: \"int256\",\n                indexed: false\n            },\n            {\n                name: \"decimals\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"log_named_decimal_int\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"key\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            },\n            {\n                name: \"val\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            },\n            {\n                name: \"decimals\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"log_named_decimal_uint\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"key\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            },\n            {\n                name: \"val\",\n                internalType: \"int256\",\n                type: \"int256\",\n                indexed: false\n            }\n        ],\n        name: \"log_named_int\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"key\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            },\n            {\n                name: \"val\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            }\n        ],\n        name: \"log_named_string\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"key\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            },\n            {\n                name: \"val\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"log_named_uint\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            }\n        ],\n        name: \"log_string\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"log_uint\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"\",\n                internalType: \"bytes\",\n                type: \"bytes\",\n                indexed: false\n            }\n        ],\n        name: \"logs\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"IS_TEST\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"token\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"give\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"deal\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"token\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"give\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            },\n            {\n                name: \"adjust\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ],\n        name: \"deal\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"give\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"deal\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"what\",\n                internalType: \"string\",\n                type: \"string\"\n            },\n            {\n                name: \"args\",\n                internalType: \"bytes\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"deployCode\",\n        outputs: [\n            {\n                name: \"addr\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"what\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ],\n        name: \"deployCode\",\n        outputs: [\n            {\n                name: \"addr\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [],\n        name: \"failed\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"who\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"hoax\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"who\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"origin\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"hoax\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"who\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"origin\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"give\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"hoax\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"who\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"give\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"hoax\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"time\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"rewind\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [],\n        name: \"setUp\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"time\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"skip\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"who\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"give\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"startHoax\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"who\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"origin\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"give\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"startHoax\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"who\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"startHoax\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"who\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"origin\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"startHoax\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [],\n        name: \"testExecuteCall\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"token\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"give\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"tip\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"vm\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"contract Vm\",\n                type: \"address\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC165\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst erc165ABI = [\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"interfaceId\",\n                internalType: \"bytes4\",\n                type: \"bytes4\"\n            }\n        ],\n        name: \"supportsInterface\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC20\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst erc20ABI = [\n    {\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n        inputs: [\n            {\n                name: \"name_\",\n                internalType: \"string\",\n                type: \"string\"\n            },\n            {\n                name: \"symbol_\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Approval\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Transfer\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint8\",\n                type: \"uint8\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"subtractedValue\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"decreaseAllowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"addedValue\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"increaseAllowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC20Pausable\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst erc20PausableABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Approval\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: false\n            }\n        ],\n        name: \"Paused\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Transfer\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: false\n            }\n        ],\n        name: \"Unpaused\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint8\",\n                type: \"uint8\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"subtractedValue\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"decreaseAllowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"addedValue\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"increaseAllowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"paused\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC20PresetMinterPauser\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst erc20PresetMinterPauserABI = [\n    {\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n        inputs: [\n            {\n                name: \"name\",\n                internalType: \"string\",\n                type: \"string\"\n            },\n            {\n                name: \"symbol\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Approval\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: false\n            }\n        ],\n        name: \"Paused\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"previousAdminRole\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"newAdminRole\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            }\n        ],\n        name: \"RoleAdminChanged\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"sender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"RoleGranted\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"sender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"RoleRevoked\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Transfer\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: false\n            }\n        ],\n        name: \"Unpaused\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"DEFAULT_ADMIN_ROLE\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"MINTER_ROLE\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"PAUSER_ROLE\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"burn\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"burnFrom\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint8\",\n                type: \"uint8\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"subtractedValue\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"decreaseAllowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ],\n        name: \"getRoleAdmin\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"index\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"getRoleMember\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ],\n        name: \"getRoleMemberCount\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"grantRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"hasRole\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"addedValue\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"increaseAllowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"mint\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [],\n        name: \"pause\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"paused\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"renounceRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"revokeRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"interfaceId\",\n                internalType: \"bytes4\",\n                type: \"bytes4\"\n            }\n        ],\n        name: \"supportsInterface\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [],\n        name: \"unpause\",\n        outputs: []\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ERC20Burnable\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst erc20BurnableABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Approval\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Transfer\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"burn\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"burnFrom\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint8\",\n                type: \"uint8\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"subtractedValue\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"decreaseAllowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"addedValue\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"increaseAllowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IAccessControl\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst iAccessControlABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"previousAdminRole\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"newAdminRole\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            }\n        ],\n        name: \"RoleAdminChanged\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"sender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"RoleGranted\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"sender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"RoleRevoked\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ],\n        name: \"getRoleAdmin\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"grantRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"hasRole\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"renounceRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"revokeRole\",\n        outputs: []\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC1155\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst ierc1155ABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"operator\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"approved\",\n                internalType: \"bool\",\n                type: \"bool\",\n                indexed: false\n            }\n        ],\n        name: \"ApprovalForAll\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"operator\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"ids\",\n                internalType: \"uint256[]\",\n                type: \"uint256[]\",\n                indexed: false\n            },\n            {\n                name: \"values\",\n                internalType: \"uint256[]\",\n                type: \"uint256[]\",\n                indexed: false\n            }\n        ],\n        name: \"TransferBatch\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"operator\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"id\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"TransferSingle\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"value\",\n                internalType: \"string\",\n                type: \"string\",\n                indexed: false\n            },\n            {\n                name: \"id\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: true\n            }\n        ],\n        name: \"URI\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"id\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"accounts\",\n                internalType: \"address[]\",\n                type: \"address[]\"\n            },\n            {\n                name: \"ids\",\n                internalType: \"uint256[]\",\n                type: \"uint256[]\"\n            }\n        ],\n        name: \"balanceOfBatch\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256[]\",\n                type: \"uint256[]\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"operator\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"isApprovedForAll\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"ids\",\n                internalType: \"uint256[]\",\n                type: \"uint256[]\"\n            },\n            {\n                name: \"amounts\",\n                internalType: \"uint256[]\",\n                type: \"uint256[]\"\n            },\n            {\n                name: \"data\",\n                internalType: \"bytes\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"safeBatchTransferFrom\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"id\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            },\n            {\n                name: \"data\",\n                internalType: \"bytes\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"safeTransferFrom\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"operator\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"approved\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ],\n        name: \"setApprovalForAll\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"interfaceId\",\n                internalType: \"bytes4\",\n                type: \"bytes4\"\n            }\n        ],\n        name: \"supportsInterface\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IAccessControlEnumerable\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst iAccessControlEnumerableABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"previousAdminRole\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"newAdminRole\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            }\n        ],\n        name: \"RoleAdminChanged\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"sender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"RoleGranted\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\",\n                indexed: true\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"sender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"RoleRevoked\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ],\n        name: \"getRoleAdmin\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"index\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"getRoleMember\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            }\n        ],\n        name: \"getRoleMemberCount\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"grantRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"hasRole\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"renounceRole\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"role\",\n                internalType: \"bytes32\",\n                type: \"bytes32\"\n            },\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"revokeRole\",\n        outputs: []\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC165\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst ierc165ABI = [\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"interfaceId\",\n                internalType: \"bytes4\",\n                type: \"bytes4\"\n            }\n        ],\n        name: \"supportsInterface\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC20\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst ierc20ABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Approval\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Transfer\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC20Metadata\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst ierc20MetadataABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Approval\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"value\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: false\n            }\n        ],\n        name: \"Transfer\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"spender\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint8\",\n                type: \"uint8\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"string\",\n                type: \"string\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"amount\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IERC721\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst ierc721ABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"approved\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"tokenId\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: true\n            }\n        ],\n        name: \"Approval\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"operator\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"approved\",\n                internalType: \"bool\",\n                type: \"bool\",\n                indexed: false\n            }\n        ],\n        name: \"ApprovalForAll\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"tokenId\",\n                internalType: \"uint256\",\n                type: \"uint256\",\n                indexed: true\n            }\n        ],\n        name: \"Transfer\"\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"tokenId\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"approve\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                name: \"balance\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"tokenId\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"getApproved\",\n        outputs: [\n            {\n                name: \"operator\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"operator\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"isApprovedForAll\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"tokenId\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"ownerOf\",\n        outputs: [\n            {\n                name: \"owner\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"tokenId\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"safeTransferFrom\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"tokenId\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            },\n            {\n                name: \"data\",\n                internalType: \"bytes\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"safeTransferFrom\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"operator\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"approved\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ],\n        name: \"setApprovalForAll\",\n        outputs: []\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"interfaceId\",\n                internalType: \"bytes4\",\n                type: \"bytes4\"\n            }\n        ],\n        name: \"supportsInterface\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"from\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"to\",\n                internalType: \"address\",\n                type: \"address\"\n            },\n            {\n                name: \"tokenId\",\n                internalType: \"uint256\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"transferFrom\",\n        outputs: []\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// MinimalProxyFactory\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst minimalProxyFactoryABI = [\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"target\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"clone\",\n        outputs: [\n            {\n                name: \"result\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Ownable\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst ownableABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"previousOwner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            },\n            {\n                name: \"newOwner\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: true\n            }\n        ],\n        name: \"OwnershipTransferred\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ]\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [],\n        name: \"renounceOwnership\",\n        outputs: []\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        inputs: [\n            {\n                name: \"newOwner\",\n                internalType: \"address\",\n                type: \"address\"\n            }\n        ],\n        name: \"transferOwnership\",\n        outputs: []\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Pausable\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst pausableABI = [\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: false\n            }\n        ],\n        name: \"Paused\"\n    },\n    {\n        type: \"event\",\n        anonymous: false,\n        inputs: [\n            {\n                name: \"account\",\n                internalType: \"address\",\n                type: \"address\",\n                indexed: false\n            }\n        ],\n        name: \"Unpaused\"\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        inputs: [],\n        name: \"paused\",\n        outputs: [\n            {\n                name: \"\",\n                internalType: \"bool\",\n                type: \"bool\"\n            }\n        ]\n    }\n];\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// React\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link accessControlABI}__.\n */ function useAccessControl() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: accessControlABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlABI}__.\n */ function useAccessControlRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlABI}__ and `functionName` set to `\"DEFAULT_ADMIN_ROLE\"`.\n */ function useAccessControlDefaultAdminRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlABI,\n        functionName: \"DEFAULT_ADMIN_ROLE\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlABI}__ and `functionName` set to `\"getRoleAdmin\"`.\n */ function useAccessControlGetRoleAdmin() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlABI,\n        functionName: \"getRoleAdmin\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlABI}__ and `functionName` set to `\"hasRole\"`.\n */ function useAccessControlHasRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlABI,\n        functionName: \"hasRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlABI}__ and `functionName` set to `\"supportsInterface\"`.\n */ function useAccessControlSupportsInterface() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlABI,\n        functionName: \"supportsInterface\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link accessControlABI}__.\n */ function useAccessControlWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: accessControlABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link accessControlABI}__ and `functionName` set to `\"grantRole\"`.\n */ function useAccessControlGrantRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: accessControlABI,\n        functionName: \"grantRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link accessControlABI}__ and `functionName` set to `\"renounceRole\"`.\n */ function useAccessControlRenounceRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: accessControlABI,\n        functionName: \"renounceRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link accessControlABI}__ and `functionName` set to `\"revokeRole\"`.\n */ function useAccessControlRevokeRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: accessControlABI,\n        functionName: \"revokeRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link accessControlABI}__.\n */ function usePrepareAccessControlWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: accessControlABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link accessControlABI}__ and `functionName` set to `\"grantRole\"`.\n */ function usePrepareAccessControlGrantRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: accessControlABI,\n        functionName: \"grantRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link accessControlABI}__ and `functionName` set to `\"renounceRole\"`.\n */ function usePrepareAccessControlRenounceRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: accessControlABI,\n        functionName: \"renounceRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link accessControlABI}__ and `functionName` set to `\"revokeRole\"`.\n */ function usePrepareAccessControlRevokeRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: accessControlABI,\n        functionName: \"revokeRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link accessControlABI}__.\n */ function useAccessControlEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: accessControlABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link accessControlABI}__ and `eventName` set to `\"RoleAdminChanged\"`.\n */ function useAccessControlRoleAdminChangedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: accessControlABI,\n        eventName: \"RoleAdminChanged\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link accessControlABI}__ and `eventName` set to `\"RoleGranted\"`.\n */ function useAccessControlRoleGrantedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: accessControlABI,\n        eventName: \"RoleGranted\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link accessControlABI}__ and `eventName` set to `\"RoleRevoked\"`.\n */ function useAccessControlRoleRevokedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: accessControlABI,\n        eventName: \"RoleRevoked\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link accessControlEnumerableABI}__.\n */ function useAccessControlEnumerable() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: accessControlEnumerableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlEnumerableABI}__.\n */ function useAccessControlEnumerableRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlEnumerableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"DEFAULT_ADMIN_ROLE\"`.\n */ function useAccessControlEnumerableDefaultAdminRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlEnumerableABI,\n        functionName: \"DEFAULT_ADMIN_ROLE\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"getRoleAdmin\"`.\n */ function useAccessControlEnumerableGetRoleAdmin() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlEnumerableABI,\n        functionName: \"getRoleAdmin\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"getRoleMember\"`.\n */ function useAccessControlEnumerableGetRoleMember() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlEnumerableABI,\n        functionName: \"getRoleMember\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"getRoleMemberCount\"`.\n */ function useAccessControlEnumerableGetRoleMemberCount() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlEnumerableABI,\n        functionName: \"getRoleMemberCount\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"hasRole\"`.\n */ function useAccessControlEnumerableHasRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlEnumerableABI,\n        functionName: \"hasRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"supportsInterface\"`.\n */ function useAccessControlEnumerableSupportsInterface() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: accessControlEnumerableABI,\n        functionName: \"supportsInterface\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link accessControlEnumerableABI}__.\n */ function useAccessControlEnumerableWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: accessControlEnumerableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"grantRole\"`.\n */ function useAccessControlEnumerableGrantRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: accessControlEnumerableABI,\n        functionName: \"grantRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"renounceRole\"`.\n */ function useAccessControlEnumerableRenounceRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: accessControlEnumerableABI,\n        functionName: \"renounceRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"revokeRole\"`.\n */ function useAccessControlEnumerableRevokeRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: accessControlEnumerableABI,\n        functionName: \"revokeRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link accessControlEnumerableABI}__.\n */ function usePrepareAccessControlEnumerableWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: accessControlEnumerableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"grantRole\"`.\n */ function usePrepareAccessControlEnumerableGrantRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: accessControlEnumerableABI,\n        functionName: \"grantRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"renounceRole\"`.\n */ function usePrepareAccessControlEnumerableRenounceRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: accessControlEnumerableABI,\n        functionName: \"renounceRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `functionName` set to `\"revokeRole\"`.\n */ function usePrepareAccessControlEnumerableRevokeRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: accessControlEnumerableABI,\n        functionName: \"revokeRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link accessControlEnumerableABI}__.\n */ function useAccessControlEnumerableEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: accessControlEnumerableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `eventName` set to `\"RoleAdminChanged\"`.\n */ function useAccessControlEnumerableRoleAdminChangedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: accessControlEnumerableABI,\n        eventName: \"RoleAdminChanged\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `eventName` set to `\"RoleGranted\"`.\n */ function useAccessControlEnumerableRoleGrantedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: accessControlEnumerableABI,\n        eventName: \"RoleGranted\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link accessControlEnumerableABI}__ and `eventName` set to `\"RoleRevoked\"`.\n */ function useAccessControlEnumerableRoleRevokedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: accessControlEnumerableABI,\n        eventName: \"RoleRevoked\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link counterfactualVaultABI}__.\n */ function useCounterfactualVault() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: counterfactualVaultABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link counterfactualVaultABI}__.\n */ function useCounterfactualVaultWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: counterfactualVaultABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link counterfactualVaultABI}__ and `functionName` set to `\"destroy\"`.\n */ function useCounterfactualVaultDestroy() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: counterfactualVaultABI,\n        functionName: \"destroy\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link counterfactualVaultABI}__ and `functionName` set to `\"executeCalls\"`.\n */ function useCounterfactualVaultExecuteCalls() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: counterfactualVaultABI,\n        functionName: \"executeCalls\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link counterfactualVaultABI}__ and `functionName` set to `\"initialize\"`.\n */ function useCounterfactualVaultInitialize() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: counterfactualVaultABI,\n        functionName: \"initialize\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link counterfactualVaultABI}__.\n */ function usePrepareCounterfactualVaultWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: counterfactualVaultABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link counterfactualVaultABI}__ and `functionName` set to `\"destroy\"`.\n */ function usePrepareCounterfactualVaultDestroy() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: counterfactualVaultABI,\n        functionName: \"destroy\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link counterfactualVaultABI}__ and `functionName` set to `\"executeCalls\"`.\n */ function usePrepareCounterfactualVaultExecuteCalls() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: counterfactualVaultABI,\n        functionName: \"executeCalls\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link counterfactualVaultABI}__ and `functionName` set to `\"initialize\"`.\n */ function usePrepareCounterfactualVaultInitialize() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: counterfactualVaultABI,\n        functionName: \"initialize\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link counterfactualVaultControllerABI}__.\n */ function useCounterfactualVaultController() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: counterfactualVaultControllerABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link counterfactualVaultControllerABI}__.\n */ function useCounterfactualVaultControllerRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: counterfactualVaultControllerABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `functionName` set to `\"computeAddress\"`.\n */ function useCounterfactualVaultControllerComputeAddress() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: counterfactualVaultControllerABI,\n        functionName: \"computeAddress\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `functionName` set to `\"counterfactualWalletInstance\"`.\n */ function useCounterfactualVaultControllerCounterfactualWalletInstance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: counterfactualVaultControllerABI,\n        functionName: \"counterfactualWalletInstance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `functionName` set to `\"owner\"`.\n */ function useCounterfactualVaultControllerOwner() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: counterfactualVaultControllerABI,\n        functionName: \"owner\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerABI}__.\n */ function useCounterfactualVaultControllerWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: counterfactualVaultControllerABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `functionName` set to `\"executeCalls\"`.\n */ function useCounterfactualVaultControllerExecuteCalls() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: counterfactualVaultControllerABI,\n        functionName: \"executeCalls\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `functionName` set to `\"renounceOwnership\"`.\n */ function useCounterfactualVaultControllerRenounceOwnership() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: counterfactualVaultControllerABI,\n        functionName: \"renounceOwnership\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `functionName` set to `\"transferOwnership\"`.\n */ function useCounterfactualVaultControllerTransferOwnership() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: counterfactualVaultControllerABI,\n        functionName: \"transferOwnership\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerABI}__.\n */ function usePrepareCounterfactualVaultControllerWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: counterfactualVaultControllerABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `functionName` set to `\"executeCalls\"`.\n */ function usePrepareCounterfactualVaultControllerExecuteCalls() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: counterfactualVaultControllerABI,\n        functionName: \"executeCalls\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `functionName` set to `\"renounceOwnership\"`.\n */ function usePrepareCounterfactualVaultControllerRenounceOwnership() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: counterfactualVaultControllerABI,\n        functionName: \"renounceOwnership\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `functionName` set to `\"transferOwnership\"`.\n */ function usePrepareCounterfactualVaultControllerTransferOwnership() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: counterfactualVaultControllerABI,\n        functionName: \"transferOwnership\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link counterfactualVaultControllerABI}__.\n */ function useCounterfactualVaultControllerEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: counterfactualVaultControllerABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `eventName` set to `\"Executed\"`.\n */ function useCounterfactualVaultControllerExecutedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: counterfactualVaultControllerABI,\n        eventName: \"Executed\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link counterfactualVaultControllerABI}__ and `eventName` set to `\"OwnershipTransferred\"`.\n */ function useCounterfactualVaultControllerOwnershipTransferredEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: counterfactualVaultControllerABI,\n        eventName: \"OwnershipTransferred\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link counterfactualVaultControllerFactoryABI}__.\n */ function useCounterfactualVaultControllerFactory() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: counterfactualVaultControllerFactoryABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerFactoryABI}__.\n */ function useCounterfactualVaultControllerFactoryWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: counterfactualVaultControllerFactoryABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerFactoryABI}__ and `functionName` set to `\"createCounterfactualVaultController\"`.\n */ function useCounterfactualVaultControllerFactoryCreateCounterfactualVaultController() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: counterfactualVaultControllerFactoryABI,\n        functionName: \"createCounterfactualVaultController\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerFactoryABI}__.\n */ function usePrepareCounterfactualVaultControllerFactoryWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: counterfactualVaultControllerFactoryABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link counterfactualVaultControllerFactoryABI}__ and `functionName` set to `\"createCounterfactualVaultController\"`.\n */ function usePrepareCounterfactualVaultControllerFactoryCreateCounterfactualVaultController() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: counterfactualVaultControllerFactoryABI,\n        functionName: \"createCounterfactualVaultController\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link counterfactualVaultControllerFactoryABI}__.\n */ function useCounterfactualVaultControllerFactoryEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: counterfactualVaultControllerFactoryABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link counterfactualVaultControllerFactoryABI}__ and `eventName` set to `\"CounterfactualVaultControllerCreated\"`.\n */ function useCounterfactualVaultControllerFactoryCounterfactualVaultControllerCreatedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: counterfactualVaultControllerFactoryABI,\n        eventName: \"CounterfactualVaultControllerCreated\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__.\n */ function useTestCounterfactualVaultController() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: testCounterfactualVaultControllerABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__.\n */ function useTestCounterfactualVaultControllerRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: testCounterfactualVaultControllerABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"IS_TEST\"`.\n */ function useTestCounterfactualVaultControllerIsTest() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"IS_TEST\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"vm\"`.\n */ function useTestCounterfactualVaultControllerVm() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"vm\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__.\n */ function useTestCounterfactualVaultControllerWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"deal\"`.\n */ function useTestCounterfactualVaultControllerDeal() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"deal\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"deployCode\"`.\n */ function useTestCounterfactualVaultControllerDeployCode() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"deployCode\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"failed\"`.\n */ function useTestCounterfactualVaultControllerFailed() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"failed\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"hoax\"`.\n */ function useTestCounterfactualVaultControllerHoax() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"hoax\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"rewind\"`.\n */ function useTestCounterfactualVaultControllerRewind() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"rewind\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"setUp\"`.\n */ function useTestCounterfactualVaultControllerSetUp() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"setUp\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"skip\"`.\n */ function useTestCounterfactualVaultControllerSkip() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"skip\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"startHoax\"`.\n */ function useTestCounterfactualVaultControllerStartHoax() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"startHoax\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"testExecuteCall\"`.\n */ function useTestCounterfactualVaultControllerTestExecuteCall() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"testExecuteCall\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"tip\"`.\n */ function useTestCounterfactualVaultControllerTip() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"tip\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__.\n */ function usePrepareTestCounterfactualVaultControllerWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"deal\"`.\n */ function usePrepareTestCounterfactualVaultControllerDeal() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"deal\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"deployCode\"`.\n */ function usePrepareTestCounterfactualVaultControllerDeployCode() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"deployCode\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"failed\"`.\n */ function usePrepareTestCounterfactualVaultControllerFailed() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"failed\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"hoax\"`.\n */ function usePrepareTestCounterfactualVaultControllerHoax() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"hoax\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"rewind\"`.\n */ function usePrepareTestCounterfactualVaultControllerRewind() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"rewind\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"setUp\"`.\n */ function usePrepareTestCounterfactualVaultControllerSetUp() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"setUp\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"skip\"`.\n */ function usePrepareTestCounterfactualVaultControllerSkip() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"skip\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"startHoax\"`.\n */ function usePrepareTestCounterfactualVaultControllerStartHoax() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"startHoax\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"testExecuteCall\"`.\n */ function usePrepareTestCounterfactualVaultControllerTestExecuteCall() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"testExecuteCall\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `functionName` set to `\"tip\"`.\n */ function usePrepareTestCounterfactualVaultControllerTip() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: testCounterfactualVaultControllerABI,\n        functionName: \"tip\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__.\n */ function useTestCounterfactualVaultControllerEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"WARNING_Deprecated\"`.\n */ function useTestCounterfactualVaultControllerWarningDeprecatedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"WARNING_Deprecated\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log\"`.\n */ function useTestCounterfactualVaultControllerLogEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_address\"`.\n */ function useTestCounterfactualVaultControllerLogAddressEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_address\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_bytes\"`.\n */ function useTestCounterfactualVaultControllerLogBytesEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_bytes\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_bytes32\"`.\n */ function useTestCounterfactualVaultControllerLogBytes32Event() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_bytes32\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_int\"`.\n */ function useTestCounterfactualVaultControllerLogIntEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_int\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_named_address\"`.\n */ function useTestCounterfactualVaultControllerLogNamedAddressEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_named_address\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_named_bytes\"`.\n */ function useTestCounterfactualVaultControllerLogNamedBytesEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_named_bytes\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_named_bytes32\"`.\n */ function useTestCounterfactualVaultControllerLogNamedBytes32Event() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_named_bytes32\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_named_decimal_int\"`.\n */ function useTestCounterfactualVaultControllerLogNamedDecimalIntEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_named_decimal_int\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_named_decimal_uint\"`.\n */ function useTestCounterfactualVaultControllerLogNamedDecimalUintEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_named_decimal_uint\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_named_int\"`.\n */ function useTestCounterfactualVaultControllerLogNamedIntEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_named_int\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_named_string\"`.\n */ function useTestCounterfactualVaultControllerLogNamedStringEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_named_string\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_named_uint\"`.\n */ function useTestCounterfactualVaultControllerLogNamedUintEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_named_uint\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_string\"`.\n */ function useTestCounterfactualVaultControllerLogStringEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_string\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"log_uint\"`.\n */ function useTestCounterfactualVaultControllerLogUintEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"log_uint\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link testCounterfactualVaultControllerABI}__ and `eventName` set to `\"logs\"`.\n */ function useTestCounterfactualVaultControllerLogsEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: testCounterfactualVaultControllerABI,\n        eventName: \"logs\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link erc165ABI}__.\n */ function useErc165() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: erc165ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc165ABI}__.\n */ function useErc165Read() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc165ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc165ABI}__ and `functionName` set to `\"supportsInterface\"`.\n */ function useErc165SupportsInterface() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc165ABI,\n        functionName: \"supportsInterface\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link erc20ABI}__.\n */ function useErc20() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: erc20ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__.\n */ function useErc20Read() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"allowance\"`.\n */ function useErc20Allowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20ABI,\n        functionName: \"allowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"balanceOf\"`.\n */ function useErc20BalanceOf() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20ABI,\n        functionName: \"balanceOf\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"decimals\"`.\n */ function useErc20Decimals() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20ABI,\n        functionName: \"decimals\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"name\"`.\n */ function useErc20Name() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20ABI,\n        functionName: \"name\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"symbol\"`.\n */ function useErc20Symbol() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20ABI,\n        functionName: \"symbol\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"totalSupply\"`.\n */ function useErc20TotalSupply() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20ABI,\n        functionName: \"totalSupply\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__.\n */ function useErc20Write() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"approve\"`.\n */ function useErc20Approve() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20ABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"decreaseAllowance\"`.\n */ function useErc20DecreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20ABI,\n        functionName: \"decreaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"increaseAllowance\"`.\n */ function useErc20IncreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20ABI,\n        functionName: \"increaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"transfer\"`.\n */ function useErc20Transfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20ABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function useErc20TransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20ABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__.\n */ function usePrepareErc20Write() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"approve\"`.\n */ function usePrepareErc20Approve() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20ABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"decreaseAllowance\"`.\n */ function usePrepareErc20DecreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20ABI,\n        functionName: \"decreaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"increaseAllowance\"`.\n */ function usePrepareErc20IncreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20ABI,\n        functionName: \"increaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"transfer\"`.\n */ function usePrepareErc20Transfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20ABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function usePrepareErc20TransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20ABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__.\n */ function useErc20Event() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `\"Approval\"`.\n */ function useErc20ApprovalEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20ABI,\n        eventName: \"Approval\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `\"Transfer\"`.\n */ function useErc20TransferEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20ABI,\n        eventName: \"Transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link erc20PausableABI}__.\n */ function useErc20Pausable() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: erc20PausableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PausableABI}__.\n */ function useErc20PausableRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PausableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"allowance\"`.\n */ function useErc20PausableAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PausableABI,\n        functionName: \"allowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"balanceOf\"`.\n */ function useErc20PausableBalanceOf() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PausableABI,\n        functionName: \"balanceOf\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"decimals\"`.\n */ function useErc20PausableDecimals() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PausableABI,\n        functionName: \"decimals\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"name\"`.\n */ function useErc20PausableName() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PausableABI,\n        functionName: \"name\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"paused\"`.\n */ function useErc20PausablePaused() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PausableABI,\n        functionName: \"paused\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"symbol\"`.\n */ function useErc20PausableSymbol() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PausableABI,\n        functionName: \"symbol\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"totalSupply\"`.\n */ function useErc20PausableTotalSupply() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PausableABI,\n        functionName: \"totalSupply\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PausableABI}__.\n */ function useErc20PausableWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PausableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"approve\"`.\n */ function useErc20PausableApprove() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PausableABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"decreaseAllowance\"`.\n */ function useErc20PausableDecreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PausableABI,\n        functionName: \"decreaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"increaseAllowance\"`.\n */ function useErc20PausableIncreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PausableABI,\n        functionName: \"increaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"transfer\"`.\n */ function useErc20PausableTransfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PausableABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function useErc20PausableTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PausableABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PausableABI}__.\n */ function usePrepareErc20PausableWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PausableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"approve\"`.\n */ function usePrepareErc20PausableApprove() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PausableABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"decreaseAllowance\"`.\n */ function usePrepareErc20PausableDecreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PausableABI,\n        functionName: \"decreaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"increaseAllowance\"`.\n */ function usePrepareErc20PausableIncreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PausableABI,\n        functionName: \"increaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"transfer\"`.\n */ function usePrepareErc20PausableTransfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PausableABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PausableABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function usePrepareErc20PausableTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PausableABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PausableABI}__.\n */ function useErc20PausableEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PausableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PausableABI}__ and `eventName` set to `\"Approval\"`.\n */ function useErc20PausableApprovalEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PausableABI,\n        eventName: \"Approval\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PausableABI}__ and `eventName` set to `\"Paused\"`.\n */ function useErc20PausablePausedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PausableABI,\n        eventName: \"Paused\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PausableABI}__ and `eventName` set to `\"Transfer\"`.\n */ function useErc20PausableTransferEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PausableABI,\n        eventName: \"Transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PausableABI}__ and `eventName` set to `\"Unpaused\"`.\n */ function useErc20PausableUnpausedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PausableABI,\n        eventName: \"Unpaused\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__.\n */ function useErc20PresetMinterPauser() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: erc20PresetMinterPauserABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__.\n */ function useErc20PresetMinterPauserRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"DEFAULT_ADMIN_ROLE\"`.\n */ function useErc20PresetMinterPauserDefaultAdminRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"DEFAULT_ADMIN_ROLE\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"MINTER_ROLE\"`.\n */ function useErc20PresetMinterPauserMinterRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"MINTER_ROLE\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"PAUSER_ROLE\"`.\n */ function useErc20PresetMinterPauserPauserRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"PAUSER_ROLE\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"allowance\"`.\n */ function useErc20PresetMinterPauserAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"allowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"balanceOf\"`.\n */ function useErc20PresetMinterPauserBalanceOf() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"balanceOf\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"decimals\"`.\n */ function useErc20PresetMinterPauserDecimals() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"decimals\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"getRoleAdmin\"`.\n */ function useErc20PresetMinterPauserGetRoleAdmin() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"getRoleAdmin\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"getRoleMember\"`.\n */ function useErc20PresetMinterPauserGetRoleMember() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"getRoleMember\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"getRoleMemberCount\"`.\n */ function useErc20PresetMinterPauserGetRoleMemberCount() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"getRoleMemberCount\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"hasRole\"`.\n */ function useErc20PresetMinterPauserHasRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"hasRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"name\"`.\n */ function useErc20PresetMinterPauserName() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"name\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"paused\"`.\n */ function useErc20PresetMinterPauserPaused() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"paused\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"supportsInterface\"`.\n */ function useErc20PresetMinterPauserSupportsInterface() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"supportsInterface\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"symbol\"`.\n */ function useErc20PresetMinterPauserSymbol() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"symbol\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"totalSupply\"`.\n */ function useErc20PresetMinterPauserTotalSupply() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"totalSupply\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__.\n */ function useErc20PresetMinterPauserWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"approve\"`.\n */ function useErc20PresetMinterPauserApprove() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"burn\"`.\n */ function useErc20PresetMinterPauserBurn() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"burn\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"burnFrom\"`.\n */ function useErc20PresetMinterPauserBurnFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"burnFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"decreaseAllowance\"`.\n */ function useErc20PresetMinterPauserDecreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"decreaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"grantRole\"`.\n */ function useErc20PresetMinterPauserGrantRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"grantRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"increaseAllowance\"`.\n */ function useErc20PresetMinterPauserIncreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"increaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"mint\"`.\n */ function useErc20PresetMinterPauserMint() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"mint\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"pause\"`.\n */ function useErc20PresetMinterPauserPause() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"pause\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"renounceRole\"`.\n */ function useErc20PresetMinterPauserRenounceRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"renounceRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"revokeRole\"`.\n */ function useErc20PresetMinterPauserRevokeRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"revokeRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"transfer\"`.\n */ function useErc20PresetMinterPauserTransfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function useErc20PresetMinterPauserTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"unpause\"`.\n */ function useErc20PresetMinterPauserUnpause() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"unpause\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__.\n */ function usePrepareErc20PresetMinterPauserWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"approve\"`.\n */ function usePrepareErc20PresetMinterPauserApprove() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"burn\"`.\n */ function usePrepareErc20PresetMinterPauserBurn() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"burn\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"burnFrom\"`.\n */ function usePrepareErc20PresetMinterPauserBurnFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"burnFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"decreaseAllowance\"`.\n */ function usePrepareErc20PresetMinterPauserDecreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"decreaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"grantRole\"`.\n */ function usePrepareErc20PresetMinterPauserGrantRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"grantRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"increaseAllowance\"`.\n */ function usePrepareErc20PresetMinterPauserIncreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"increaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"mint\"`.\n */ function usePrepareErc20PresetMinterPauserMint() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"mint\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"pause\"`.\n */ function usePrepareErc20PresetMinterPauserPause() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"pause\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"renounceRole\"`.\n */ function usePrepareErc20PresetMinterPauserRenounceRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"renounceRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"revokeRole\"`.\n */ function usePrepareErc20PresetMinterPauserRevokeRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"revokeRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"transfer\"`.\n */ function usePrepareErc20PresetMinterPauserTransfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function usePrepareErc20PresetMinterPauserTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `functionName` set to `\"unpause\"`.\n */ function usePrepareErc20PresetMinterPauserUnpause() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20PresetMinterPauserABI,\n        functionName: \"unpause\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__.\n */ function useErc20PresetMinterPauserEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PresetMinterPauserABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `eventName` set to `\"Approval\"`.\n */ function useErc20PresetMinterPauserApprovalEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PresetMinterPauserABI,\n        eventName: \"Approval\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `eventName` set to `\"Paused\"`.\n */ function useErc20PresetMinterPauserPausedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PresetMinterPauserABI,\n        eventName: \"Paused\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `eventName` set to `\"RoleAdminChanged\"`.\n */ function useErc20PresetMinterPauserRoleAdminChangedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PresetMinterPauserABI,\n        eventName: \"RoleAdminChanged\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `eventName` set to `\"RoleGranted\"`.\n */ function useErc20PresetMinterPauserRoleGrantedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PresetMinterPauserABI,\n        eventName: \"RoleGranted\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `eventName` set to `\"RoleRevoked\"`.\n */ function useErc20PresetMinterPauserRoleRevokedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PresetMinterPauserABI,\n        eventName: \"RoleRevoked\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `eventName` set to `\"Transfer\"`.\n */ function useErc20PresetMinterPauserTransferEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PresetMinterPauserABI,\n        eventName: \"Transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20PresetMinterPauserABI}__ and `eventName` set to `\"Unpaused\"`.\n */ function useErc20PresetMinterPauserUnpausedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20PresetMinterPauserABI,\n        eventName: \"Unpaused\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link erc20BurnableABI}__.\n */ function useErc20Burnable() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: erc20BurnableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20BurnableABI}__.\n */ function useErc20BurnableRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20BurnableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"allowance\"`.\n */ function useErc20BurnableAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20BurnableABI,\n        functionName: \"allowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"balanceOf\"`.\n */ function useErc20BurnableBalanceOf() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20BurnableABI,\n        functionName: \"balanceOf\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"decimals\"`.\n */ function useErc20BurnableDecimals() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20BurnableABI,\n        functionName: \"decimals\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"name\"`.\n */ function useErc20BurnableName() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20BurnableABI,\n        functionName: \"name\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"symbol\"`.\n */ function useErc20BurnableSymbol() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20BurnableABI,\n        functionName: \"symbol\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"totalSupply\"`.\n */ function useErc20BurnableTotalSupply() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: erc20BurnableABI,\n        functionName: \"totalSupply\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__.\n */ function useErc20BurnableWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20BurnableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"approve\"`.\n */ function useErc20BurnableApprove() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"burn\"`.\n */ function useErc20BurnableBurn() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"burn\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"burnFrom\"`.\n */ function useErc20BurnableBurnFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"burnFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"decreaseAllowance\"`.\n */ function useErc20BurnableDecreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"decreaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"increaseAllowance\"`.\n */ function useErc20BurnableIncreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"increaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"transfer\"`.\n */ function useErc20BurnableTransfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function useErc20BurnableTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__.\n */ function usePrepareErc20BurnableWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20BurnableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"approve\"`.\n */ function usePrepareErc20BurnableApprove() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"burn\"`.\n */ function usePrepareErc20BurnableBurn() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"burn\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"burnFrom\"`.\n */ function usePrepareErc20BurnableBurnFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"burnFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"decreaseAllowance\"`.\n */ function usePrepareErc20BurnableDecreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"decreaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"increaseAllowance\"`.\n */ function usePrepareErc20BurnableIncreaseAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"increaseAllowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"transfer\"`.\n */ function usePrepareErc20BurnableTransfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20BurnableABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function usePrepareErc20BurnableTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: erc20BurnableABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20BurnableABI}__.\n */ function useErc20BurnableEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20BurnableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20BurnableABI}__ and `eventName` set to `\"Approval\"`.\n */ function useErc20BurnableApprovalEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20BurnableABI,\n        eventName: \"Approval\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20BurnableABI}__ and `eventName` set to `\"Transfer\"`.\n */ function useErc20BurnableTransferEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: erc20BurnableABI,\n        eventName: \"Transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link iAccessControlABI}__.\n */ function useIAccessControl() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: iAccessControlABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link iAccessControlABI}__.\n */ function useIAccessControlRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: iAccessControlABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link iAccessControlABI}__ and `functionName` set to `\"getRoleAdmin\"`.\n */ function useIAccessControlGetRoleAdmin() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: iAccessControlABI,\n        functionName: \"getRoleAdmin\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link iAccessControlABI}__ and `functionName` set to `\"hasRole\"`.\n */ function useIAccessControlHasRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: iAccessControlABI,\n        functionName: \"hasRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link iAccessControlABI}__.\n */ function useIAccessControlWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: iAccessControlABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link iAccessControlABI}__ and `functionName` set to `\"grantRole\"`.\n */ function useIAccessControlGrantRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: iAccessControlABI,\n        functionName: \"grantRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link iAccessControlABI}__ and `functionName` set to `\"renounceRole\"`.\n */ function useIAccessControlRenounceRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: iAccessControlABI,\n        functionName: \"renounceRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link iAccessControlABI}__ and `functionName` set to `\"revokeRole\"`.\n */ function useIAccessControlRevokeRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: iAccessControlABI,\n        functionName: \"revokeRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link iAccessControlABI}__.\n */ function usePrepareIAccessControlWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: iAccessControlABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link iAccessControlABI}__ and `functionName` set to `\"grantRole\"`.\n */ function usePrepareIAccessControlGrantRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: iAccessControlABI,\n        functionName: \"grantRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link iAccessControlABI}__ and `functionName` set to `\"renounceRole\"`.\n */ function usePrepareIAccessControlRenounceRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: iAccessControlABI,\n        functionName: \"renounceRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link iAccessControlABI}__ and `functionName` set to `\"revokeRole\"`.\n */ function usePrepareIAccessControlRevokeRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: iAccessControlABI,\n        functionName: \"revokeRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link iAccessControlABI}__.\n */ function useIAccessControlEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: iAccessControlABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link iAccessControlABI}__ and `eventName` set to `\"RoleAdminChanged\"`.\n */ function useIAccessControlRoleAdminChangedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: iAccessControlABI,\n        eventName: \"RoleAdminChanged\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link iAccessControlABI}__ and `eventName` set to `\"RoleGranted\"`.\n */ function useIAccessControlRoleGrantedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: iAccessControlABI,\n        eventName: \"RoleGranted\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link iAccessControlABI}__ and `eventName` set to `\"RoleRevoked\"`.\n */ function useIAccessControlRoleRevokedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: iAccessControlABI,\n        eventName: \"RoleRevoked\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link ierc1155ABI}__.\n */ function useIerc1155() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: ierc1155ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc1155ABI}__.\n */ function useIerc1155Read() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc1155ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc1155ABI}__ and `functionName` set to `\"balanceOf\"`.\n */ function useIerc1155BalanceOf() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc1155ABI,\n        functionName: \"balanceOf\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc1155ABI}__ and `functionName` set to `\"balanceOfBatch\"`.\n */ function useIerc1155BalanceOfBatch() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc1155ABI,\n        functionName: \"balanceOfBatch\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc1155ABI}__ and `functionName` set to `\"isApprovedForAll\"`.\n */ function useIerc1155IsApprovedForAll() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc1155ABI,\n        functionName: \"isApprovedForAll\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc1155ABI}__ and `functionName` set to `\"supportsInterface\"`.\n */ function useIerc1155SupportsInterface() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc1155ABI,\n        functionName: \"supportsInterface\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc1155ABI}__.\n */ function useIerc1155Write() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc1155ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc1155ABI}__ and `functionName` set to `\"safeBatchTransferFrom\"`.\n */ function useIerc1155SafeBatchTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc1155ABI,\n        functionName: \"safeBatchTransferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc1155ABI}__ and `functionName` set to `\"safeTransferFrom\"`.\n */ function useIerc1155SafeTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc1155ABI,\n        functionName: \"safeTransferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc1155ABI}__ and `functionName` set to `\"setApprovalForAll\"`.\n */ function useIerc1155SetApprovalForAll() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc1155ABI,\n        functionName: \"setApprovalForAll\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc1155ABI}__.\n */ function usePrepareIerc1155Write() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc1155ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc1155ABI}__ and `functionName` set to `\"safeBatchTransferFrom\"`.\n */ function usePrepareIerc1155SafeBatchTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc1155ABI,\n        functionName: \"safeBatchTransferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc1155ABI}__ and `functionName` set to `\"safeTransferFrom\"`.\n */ function usePrepareIerc1155SafeTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc1155ABI,\n        functionName: \"safeTransferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc1155ABI}__ and `functionName` set to `\"setApprovalForAll\"`.\n */ function usePrepareIerc1155SetApprovalForAll() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc1155ABI,\n        functionName: \"setApprovalForAll\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc1155ABI}__.\n */ function useIerc1155Event() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc1155ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc1155ABI}__ and `eventName` set to `\"ApprovalForAll\"`.\n */ function useIerc1155ApprovalForAllEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc1155ABI,\n        eventName: \"ApprovalForAll\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc1155ABI}__ and `eventName` set to `\"TransferBatch\"`.\n */ function useIerc1155TransferBatchEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc1155ABI,\n        eventName: \"TransferBatch\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc1155ABI}__ and `eventName` set to `\"TransferSingle\"`.\n */ function useIerc1155TransferSingleEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc1155ABI,\n        eventName: \"TransferSingle\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc1155ABI}__ and `eventName` set to `\"URI\"`.\n */ function useIerc1155UriEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc1155ABI,\n        eventName: \"URI\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link iAccessControlEnumerableABI}__.\n */ function useIAccessControlEnumerable() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: iAccessControlEnumerableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link iAccessControlEnumerableABI}__.\n */ function useIAccessControlEnumerableRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: iAccessControlEnumerableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `functionName` set to `\"getRoleAdmin\"`.\n */ function useIAccessControlEnumerableGetRoleAdmin() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: iAccessControlEnumerableABI,\n        functionName: \"getRoleAdmin\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `functionName` set to `\"getRoleMember\"`.\n */ function useIAccessControlEnumerableGetRoleMember() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: iAccessControlEnumerableABI,\n        functionName: \"getRoleMember\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `functionName` set to `\"getRoleMemberCount\"`.\n */ function useIAccessControlEnumerableGetRoleMemberCount() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: iAccessControlEnumerableABI,\n        functionName: \"getRoleMemberCount\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `functionName` set to `\"hasRole\"`.\n */ function useIAccessControlEnumerableHasRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: iAccessControlEnumerableABI,\n        functionName: \"hasRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link iAccessControlEnumerableABI}__.\n */ function useIAccessControlEnumerableWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: iAccessControlEnumerableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `functionName` set to `\"grantRole\"`.\n */ function useIAccessControlEnumerableGrantRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: iAccessControlEnumerableABI,\n        functionName: \"grantRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `functionName` set to `\"renounceRole\"`.\n */ function useIAccessControlEnumerableRenounceRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: iAccessControlEnumerableABI,\n        functionName: \"renounceRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `functionName` set to `\"revokeRole\"`.\n */ function useIAccessControlEnumerableRevokeRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: iAccessControlEnumerableABI,\n        functionName: \"revokeRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link iAccessControlEnumerableABI}__.\n */ function usePrepareIAccessControlEnumerableWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: iAccessControlEnumerableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `functionName` set to `\"grantRole\"`.\n */ function usePrepareIAccessControlEnumerableGrantRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: iAccessControlEnumerableABI,\n        functionName: \"grantRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `functionName` set to `\"renounceRole\"`.\n */ function usePrepareIAccessControlEnumerableRenounceRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: iAccessControlEnumerableABI,\n        functionName: \"renounceRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `functionName` set to `\"revokeRole\"`.\n */ function usePrepareIAccessControlEnumerableRevokeRole() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: iAccessControlEnumerableABI,\n        functionName: \"revokeRole\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link iAccessControlEnumerableABI}__.\n */ function useIAccessControlEnumerableEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: iAccessControlEnumerableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `eventName` set to `\"RoleAdminChanged\"`.\n */ function useIAccessControlEnumerableRoleAdminChangedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: iAccessControlEnumerableABI,\n        eventName: \"RoleAdminChanged\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `eventName` set to `\"RoleGranted\"`.\n */ function useIAccessControlEnumerableRoleGrantedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: iAccessControlEnumerableABI,\n        eventName: \"RoleGranted\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link iAccessControlEnumerableABI}__ and `eventName` set to `\"RoleRevoked\"`.\n */ function useIAccessControlEnumerableRoleRevokedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: iAccessControlEnumerableABI,\n        eventName: \"RoleRevoked\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link ierc165ABI}__.\n */ function useIerc165() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: ierc165ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc165ABI}__.\n */ function useIerc165Read() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc165ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc165ABI}__ and `functionName` set to `\"supportsInterface\"`.\n */ function useIerc165SupportsInterface() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc165ABI,\n        functionName: \"supportsInterface\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link ierc20ABI}__.\n */ function useIerc20() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: ierc20ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20ABI}__.\n */ function useIerc20Read() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20ABI}__ and `functionName` set to `\"allowance\"`.\n */ function useIerc20Allowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20ABI,\n        functionName: \"allowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20ABI}__ and `functionName` set to `\"balanceOf\"`.\n */ function useIerc20BalanceOf() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20ABI,\n        functionName: \"balanceOf\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20ABI}__ and `functionName` set to `\"totalSupply\"`.\n */ function useIerc20TotalSupply() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20ABI,\n        functionName: \"totalSupply\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc20ABI}__.\n */ function useIerc20Write() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc20ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc20ABI}__ and `functionName` set to `\"approve\"`.\n */ function useIerc20Approve() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc20ABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc20ABI}__ and `functionName` set to `\"transfer\"`.\n */ function useIerc20Transfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc20ABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc20ABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function useIerc20TransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc20ABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc20ABI}__.\n */ function usePrepareIerc20Write() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc20ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc20ABI}__ and `functionName` set to `\"approve\"`.\n */ function usePrepareIerc20Approve() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc20ABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc20ABI}__ and `functionName` set to `\"transfer\"`.\n */ function usePrepareIerc20Transfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc20ABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc20ABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function usePrepareIerc20TransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc20ABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc20ABI}__.\n */ function useIerc20Event() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc20ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc20ABI}__ and `eventName` set to `\"Approval\"`.\n */ function useIerc20ApprovalEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc20ABI,\n        eventName: \"Approval\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc20ABI}__ and `eventName` set to `\"Transfer\"`.\n */ function useIerc20TransferEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc20ABI,\n        eventName: \"Transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link ierc20MetadataABI}__.\n */ function useIerc20Metadata() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: ierc20MetadataABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20MetadataABI}__.\n */ function useIerc20MetadataRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20MetadataABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"allowance\"`.\n */ function useIerc20MetadataAllowance() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20MetadataABI,\n        functionName: \"allowance\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"balanceOf\"`.\n */ function useIerc20MetadataBalanceOf() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20MetadataABI,\n        functionName: \"balanceOf\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"decimals\"`.\n */ function useIerc20MetadataDecimals() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20MetadataABI,\n        functionName: \"decimals\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"name\"`.\n */ function useIerc20MetadataName() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20MetadataABI,\n        functionName: \"name\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"symbol\"`.\n */ function useIerc20MetadataSymbol() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20MetadataABI,\n        functionName: \"symbol\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"totalSupply\"`.\n */ function useIerc20MetadataTotalSupply() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc20MetadataABI,\n        functionName: \"totalSupply\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc20MetadataABI}__.\n */ function useIerc20MetadataWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc20MetadataABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"approve\"`.\n */ function useIerc20MetadataApprove() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc20MetadataABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"transfer\"`.\n */ function useIerc20MetadataTransfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc20MetadataABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function useIerc20MetadataTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc20MetadataABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc20MetadataABI}__.\n */ function usePrepareIerc20MetadataWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc20MetadataABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"approve\"`.\n */ function usePrepareIerc20MetadataApprove() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc20MetadataABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"transfer\"`.\n */ function usePrepareIerc20MetadataTransfer() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc20MetadataABI,\n        functionName: \"transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc20MetadataABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function usePrepareIerc20MetadataTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc20MetadataABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc20MetadataABI}__.\n */ function useIerc20MetadataEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc20MetadataABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc20MetadataABI}__ and `eventName` set to `\"Approval\"`.\n */ function useIerc20MetadataApprovalEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc20MetadataABI,\n        eventName: \"Approval\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc20MetadataABI}__ and `eventName` set to `\"Transfer\"`.\n */ function useIerc20MetadataTransferEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc20MetadataABI,\n        eventName: \"Transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link ierc721ABI}__.\n */ function useIerc721() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: ierc721ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc721ABI}__.\n */ function useIerc721Read() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc721ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"balanceOf\"`.\n */ function useIerc721BalanceOf() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc721ABI,\n        functionName: \"balanceOf\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"getApproved\"`.\n */ function useIerc721GetApproved() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc721ABI,\n        functionName: \"getApproved\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"isApprovedForAll\"`.\n */ function useIerc721IsApprovedForAll() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc721ABI,\n        functionName: \"isApprovedForAll\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"ownerOf\"`.\n */ function useIerc721OwnerOf() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc721ABI,\n        functionName: \"ownerOf\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"supportsInterface\"`.\n */ function useIerc721SupportsInterface() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ierc721ABI,\n        functionName: \"supportsInterface\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc721ABI}__.\n */ function useIerc721Write() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc721ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"approve\"`.\n */ function useIerc721Approve() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc721ABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"safeTransferFrom\"`.\n */ function useIerc721SafeTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc721ABI,\n        functionName: \"safeTransferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"setApprovalForAll\"`.\n */ function useIerc721SetApprovalForAll() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc721ABI,\n        functionName: \"setApprovalForAll\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function useIerc721TransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ierc721ABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc721ABI}__.\n */ function usePrepareIerc721Write() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc721ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"approve\"`.\n */ function usePrepareIerc721Approve() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc721ABI,\n        functionName: \"approve\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"safeTransferFrom\"`.\n */ function usePrepareIerc721SafeTransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc721ABI,\n        functionName: \"safeTransferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"setApprovalForAll\"`.\n */ function usePrepareIerc721SetApprovalForAll() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc721ABI,\n        functionName: \"setApprovalForAll\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ierc721ABI}__ and `functionName` set to `\"transferFrom\"`.\n */ function usePrepareIerc721TransferFrom() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ierc721ABI,\n        functionName: \"transferFrom\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc721ABI}__.\n */ function useIerc721Event() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc721ABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc721ABI}__ and `eventName` set to `\"Approval\"`.\n */ function useIerc721ApprovalEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc721ABI,\n        eventName: \"Approval\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc721ABI}__ and `eventName` set to `\"ApprovalForAll\"`.\n */ function useIerc721ApprovalForAllEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc721ABI,\n        eventName: \"ApprovalForAll\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ierc721ABI}__ and `eventName` set to `\"Transfer\"`.\n */ function useIerc721TransferEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ierc721ABI,\n        eventName: \"Transfer\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link minimalProxyFactoryABI}__.\n */ function useMinimalProxyFactory() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: minimalProxyFactoryABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link minimalProxyFactoryABI}__.\n */ function useMinimalProxyFactoryWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: minimalProxyFactoryABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link minimalProxyFactoryABI}__ and `functionName` set to `\"clone\"`.\n */ function useMinimalProxyFactoryClone() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: minimalProxyFactoryABI,\n        functionName: \"clone\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link minimalProxyFactoryABI}__.\n */ function usePrepareMinimalProxyFactoryWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: minimalProxyFactoryABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link minimalProxyFactoryABI}__ and `functionName` set to `\"clone\"`.\n */ function usePrepareMinimalProxyFactoryClone() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: minimalProxyFactoryABI,\n        functionName: \"clone\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link ownableABI}__.\n */ function useOwnable() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: ownableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ownableABI}__.\n */ function useOwnableRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ownableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link ownableABI}__ and `functionName` set to `\"owner\"`.\n */ function useOwnableOwner() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: ownableABI,\n        functionName: \"owner\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ownableABI}__.\n */ function useOwnableWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ownableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ownableABI}__ and `functionName` set to `\"renounceOwnership\"`.\n */ function useOwnableRenounceOwnership() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ownableABI,\n        functionName: \"renounceOwnership\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractWrite}__ with `abi` set to __{@link ownableABI}__ and `functionName` set to `\"transferOwnership\"`.\n */ function useOwnableTransferOwnership() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractWrite)({\n        abi: ownableABI,\n        functionName: \"transferOwnership\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ownableABI}__.\n */ function usePrepareOwnableWrite() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ownableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ownableABI}__ and `functionName` set to `\"renounceOwnership\"`.\n */ function usePrepareOwnableRenounceOwnership() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ownableABI,\n        functionName: \"renounceOwnership\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link ownableABI}__ and `functionName` set to `\"transferOwnership\"`.\n */ function usePrepareOwnableTransferOwnership() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.usePrepareContractWrite)({\n        abi: ownableABI,\n        functionName: \"transferOwnership\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ownableABI}__.\n */ function useOwnableEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ownableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link ownableABI}__ and `eventName` set to `\"OwnershipTransferred\"`.\n */ function useOwnableOwnershipTransferredEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: ownableABI,\n        eventName: \"OwnershipTransferred\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContract}__ with `abi` set to __{@link pausableABI}__.\n */ function usePausable() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContract)({\n        abi: pausableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link pausableABI}__.\n */ function usePausableRead() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: pausableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractRead}__ with `abi` set to __{@link pausableABI}__ and `functionName` set to `\"paused\"`.\n */ function usePausablePaused() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractRead)({\n        abi: pausableABI,\n        functionName: \"paused\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pausableABI}__.\n */ function usePausableEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: pausableABI,\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pausableABI}__ and `eventName` set to `\"Paused\"`.\n */ function usePausablePausedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: pausableABI,\n        eventName: \"Paused\",\n        ...config\n    });\n}\n/**\n * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pausableABI}__ and `eventName` set to `\"Unpaused\"`.\n */ function usePausableUnpausedEvent() {\n    let config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_0__.useContractEvent)({\n        abi: pausableABI,\n        eventName: \"Unpaused\",\n        ...config\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/generated.ts\n"));

/***/ }),

/***/ "./src/pages/index.tsx":
/*!*****************************!*\
  !*** ./src/pages/index.tsx ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wagmi */ \"./node_modules/wagmi/dist/index.js\");\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components */ \"./src/components/index.ts\");\n\nvar _s = $RefreshSig$();\n\n\nfunction Page() {\n    _s();\n    const { isConnected  } = (0,wagmi__WEBPACK_IMPORTED_MODULE_2__.useAccount)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Counterfactual Vaults\"\n            }, void 0, false, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/pages/index.tsx\",\n                lineNumber: 10,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_1__.Connect, {}, void 0, false, {\n                fileName: \"/Users/aodhgan/counterfactual-vaults/src/pages/index.tsx\",\n                lineNumber: 12,\n                columnNumber: 7\n            }, this),\n            isConnected && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_1__.Account, {}, void 0, false, {\n                        fileName: \"/Users/aodhgan/counterfactual-vaults/src/pages/index.tsx\",\n                        lineNumber: 16,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"hr\", {}, void 0, false, {\n                        fileName: \"/Users/aodhgan/counterfactual-vaults/src/pages/index.tsx\",\n                        lineNumber: 17,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_1__.Counter, {}, void 0, false, {\n                        fileName: \"/Users/aodhgan/counterfactual-vaults/src/pages/index.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"hr\", {}, void 0, false, {\n                        fileName: \"/Users/aodhgan/counterfactual-vaults/src/pages/index.tsx\",\n                        lineNumber: 19,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components__WEBPACK_IMPORTED_MODULE_1__.NetworkSwitcher, {}, void 0, false, {\n                        fileName: \"/Users/aodhgan/counterfactual-vaults/src/pages/index.tsx\",\n                        lineNumber: 20,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true)\n        ]\n    }, void 0, true);\n}\n_s(Page, \"zfhL8yMEhsc9LbuqnTKJ2EdeNdk=\", false, function() {\n    return [\n        wagmi__WEBPACK_IMPORTED_MODULE_2__.useAccount\n    ];\n});\n_c = Page;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Page);\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0M7QUFFd0M7QUFFMUUsU0FBU0ssT0FBTzs7SUFDZCxNQUFNLEVBQUVDLFlBQVcsRUFBRSxHQUFHTixpREFBVUE7SUFFbEMscUJBQ0U7OzBCQUNFLDhEQUFDTzswQkFBRzs7Ozs7OzBCQUVKLDhEQUFDTCxnREFBT0E7Ozs7O1lBRVBJLDZCQUNDOztrQ0FDRSw4REFBQ0wsZ0RBQU9BOzs7OztrQ0FDUiw4REFBQ087Ozs7O2tDQUNELDhEQUFDTCxnREFBT0E7Ozs7O2tDQUNSLDhEQUFDSzs7Ozs7a0NBQ0QsOERBQUNKLHdEQUFlQTs7Ozs7Ozs7O0FBSzFCO0dBcEJTQzs7UUFDaUJMLDZDQUFVQTs7O0tBRDNCSztBQXNCVCwrREFBZUEsSUFBSUEsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvaW5kZXgudHN4PzE5YTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQWNjb3VudCB9IGZyb20gJ3dhZ21pJ1xuXG5pbXBvcnQgeyBBY2NvdW50LCBDb25uZWN0LCBDb3VudGVyLCBOZXR3b3JrU3dpdGNoZXIgfSBmcm9tICcuLi9jb21wb25lbnRzJ1xuXG5mdW5jdGlvbiBQYWdlKCkge1xuICBjb25zdCB7IGlzQ29ubmVjdGVkIH0gPSB1c2VBY2NvdW50KClcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8aDE+Q291bnRlcmZhY3R1YWwgVmF1bHRzPC9oMT5cblxuICAgICAgPENvbm5lY3QgLz5cblxuICAgICAge2lzQ29ubmVjdGVkICYmIChcbiAgICAgICAgPD5cbiAgICAgICAgICA8QWNjb3VudCAvPlxuICAgICAgICAgIDxociAvPlxuICAgICAgICAgIDxDb3VudGVyIC8+XG4gICAgICAgICAgPGhyIC8+XG4gICAgICAgICAgPE5ldHdvcmtTd2l0Y2hlciAvPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgPC8+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgUGFnZVxuIl0sIm5hbWVzIjpbInVzZUFjY291bnQiLCJBY2NvdW50IiwiQ29ubmVjdCIsIkNvdW50ZXIiLCJOZXR3b3JrU3dpdGNoZXIiLCJQYWdlIiwiaXNDb25uZWN0ZWQiLCJoMSIsImhyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/index.tsx\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Faodhgan%2Fcounterfactual-vaults%2Fsrc%2Fpages%2Findex.tsx&page=%2F!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);